{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\cvanbibber.github.io\\\\src\\\\components\\\\CircuitField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport { useReducedMotion } from 'motion/react';\n\n/**\r\n * CircuitField: Electronics-themed interactive background (optimized)\r\n * - Static canvas: PCB-like grid and copper traces (wires)\r\n * - Dynamic canvas: electrons (carriers) flowing along traces + subtle node motion\r\n * - Cursor = charged probe (repel by default, hold Alt to attract)\r\n * - Pauses offscreen, respects Reduced Motion. Lower density and no heavy blur for perf.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircuitField = () => {\n  _s();\n  const staticRef = useRef(null);\n  const dynamicRef = useRef(null);\n  const runningRef = useRef(false);\n  const rafRef = useRef(null);\n  const reduceMotion = useReducedMotion();\n  const mouse = useRef({\n    x: 0,\n    y: 0,\n    active: false,\n    attract: false\n  });\n  const mouseKinetics = useRef({\n    lastX: 0,\n    lastY: 0,\n    lastT: 0,\n    speed: 0\n  }); // px/ms\n  const dprRef = useRef(1);\n\n  // Internal simulation state\n  const stateRef = useRef(null);\n  const nextPulseAt = useRef(performance.now() + 1500);\n  const timeRef = useRef(0);\n  const rand = (min, max) => Math.random() * (max - min) + min;\n  const init = useCallback(() => {\n    const staticCanvas = staticRef.current;\n    const dynamicCanvas = dynamicRef.current;\n    if (!staticCanvas || !dynamicCanvas) return;\n    const rect = staticCanvas.getBoundingClientRect();\n    const dpr = Math.min(window.devicePixelRatio || 1, 1.5); // cap for perf\n    dprRef.current = dpr;\n    const width = Math.floor(rect.width * dpr);\n    const height = Math.floor(rect.height * dpr);\n    staticCanvas.width = width;\n    staticCanvas.height = height;\n    dynamicCanvas.width = width;\n    dynamicCanvas.height = height;\n    const w = width;\n    const h = height;\n\n    // Lower density for performance\n    const targetCols = Math.max(12, Math.min(18, Math.floor(rect.width / 70)));\n    const targetRows = Math.max(7, Math.min(12, Math.floor(rect.height / 70)));\n    const cols = targetCols;\n    const rows = targetRows;\n    const xStep = w / (cols + 1);\n    const yStep = h / (rows + 1);\n    const nodes = [];\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        const x0 = (i + 1) * xStep + rand(-0.05, 0.05) * xStep;\n        const y0 = (j + 1) * yStep + rand(-0.05, 0.05) * yStep;\n        nodes.push({\n          x: x0,\n          y: y0,\n          x0,\n          y0,\n          vx: 0,\n          vy: 0\n        });\n      }\n    }\n    const idx = (i, j) => j * cols + i;\n\n    // Only right and down connections; fewer carriers\n    const edges = [];\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        const a = idx(i, j);\n        const connect = (ii, jj) => {\n          if (ii >= 0 && ii < cols && jj >= 0 && jj < rows) {\n            const b = idx(ii, jj);\n            if (a < b) {\n              // Only put carriers on some edges for subtlety\n              const hasCarrier = Math.random() < 0.35;\n              const carriers = hasCarrier ? [{\n                t: Math.random(),\n                v: rand(0.00035, 0.001)\n              }] : [];\n              edges.push({\n                a,\n                b,\n                carriers\n              });\n            }\n          }\n        };\n        connect(i + 1, j); // right\n        connect(i, j + 1); // down\n      }\n    }\n    stateRef.current = {\n      nodes,\n      edges,\n      w,\n      h,\n      pulses: []\n    };\n\n    // Draw static once: background grid + traces\n    const sctx = staticCanvas.getContext('2d');\n    if (!sctx) return;\n    sctx.clearRect(0, 0, w, h);\n\n    // Subtle board grid\n    sctx.globalAlpha = 0.18;\n    sctx.strokeStyle = '#0891b2'; // cyan-700-ish\n    sctx.lineWidth = 1 * dpr;\n    const grid = 72 * dpr;\n    for (let x = 0; x < w; x += grid) {\n      sctx.beginPath();\n      sctx.moveTo(x, 0);\n      sctx.lineTo(x, h);\n      sctx.stroke();\n    }\n    for (let y = 0; y < h; y += grid) {\n      sctx.beginPath();\n      sctx.moveTo(0, y);\n      sctx.lineTo(w, y);\n      sctx.stroke();\n    }\n\n    // Copper traces (wires)\n    sctx.globalAlpha = 1;\n    sctx.strokeStyle = 'rgba(30, 64, 175, 0.25)'; // blue-800 low-alpha\n    sctx.lineWidth = 1 * dpr;\n    for (let e = 0; e < edges.length; e++) {\n      const edge = edges[e];\n      // only draw if near-horizontal/vertical lines (they are by construction)\n      const a = nodes[edge.a];\n      const b = nodes[edge.b];\n      sctx.beginPath();\n      sctx.moveTo(a.x, a.y);\n      sctx.lineTo(b.x, b.y);\n      sctx.stroke();\n    }\n\n    // Junction pads (very subtle)\n    sctx.fillStyle = 'rgba(59, 130, 246, 0.5)'; // blue-500\n    for (let i = 0; i < nodes.length; i++) {\n      const n = nodes[i];\n      sctx.beginPath();\n      sctx.arc(n.x, n.y, 1.2 * dpr, 0, Math.PI * 2);\n      sctx.fill();\n    }\n  }, []);\n  const step = dt => {\n    const st = stateRef.current;\n    const canvas = dynamicRef.current;\n    if (!st || !canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const {\n      nodes,\n      edges,\n      w,\n      h,\n      pulses\n    } = st;\n    const dpr = dprRef.current;\n    timeRef.current += dt;\n\n    // Physics parameters (subtle)\n    const spring = 0.006;\n    const damping = 0.94;\n    const baseMouseForce = 7000;\n    const influenceR2 = 140 * dpr * (140 * dpr);\n    // Cursor velocity attenuation: faster mouse => weaker influence\n    const speed = mouseKinetics.current.speed; // px/ms\n    const attenuation = 1 / (1 + 3.5 * speed); // tune factor 3.5\n    const mouseForce = baseMouseForce * attenuation;\n\n    // Update nodes (small drift, slight response to cursor)\n    for (let i = 0; i < nodes.length; i++) {\n      const n = nodes[i];\n      const ax = (n.x0 - n.x) * spring;\n      const ay = (n.y0 - n.y) * spring;\n      let fx = ax,\n        fy = ay;\n      if (mouse.current.active) {\n        const dx = mouse.current.x * dpr - n.x;\n        const dy = mouse.current.y * dpr - n.y;\n        const r2 = dx * dx + dy * dy + 0.001;\n        if (r2 < influenceR2) {\n          const inv = 1 / Math.sqrt(r2);\n          const dirx = dx * inv;\n          const diry = dy * inv;\n          const sign = mouse.current.attract ? 1 : -1;\n          const mag = mouseForce / r2 * sign;\n          fx += dirx * mag;\n          fy += diry * mag;\n        }\n      }\n      n.vx = (n.vx + fx) * damping;\n      n.vy = (n.vy + fy) * damping;\n      n.x += n.vx * dt;\n      n.y += n.vy * dt;\n    }\n\n    // Clear dynamic layer\n    ctx.clearRect(0, 0, w, h);\n\n    // Draw carriers (electrons) with minus sign\n    ctx.fillStyle = 'rgba(6,182,212,0.9)'; // cyan-500\n    ctx.strokeStyle = 'rgba(6,182,212,0.25)';\n    ctx.lineWidth = 1 * dpr;\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    for (let e = 0; e < edges.length; e++) {\n      const edge = edges[e];\n      if (edge.carriers.length === 0) continue;\n      const a = nodes[edge.a];\n      const b = nodes[edge.b];\n      const ex = b.x - a.x;\n      const ey = b.y - a.y;\n      // Clock modulation: gentle global sweep by x-position and time\n      const phase = a.x / w * Math.PI * 2 + timeRef.current * 0.0015;\n      const clock = 1 + 0.15 * Math.sin(phase);\n      for (let c = 0; c < edge.carriers.length; c++) {\n        const carrier = edge.carriers[c];\n        carrier.t += carrier.v * dt * clock;\n        if (carrier.t > 1) carrier.t -= 1;\n        const x = a.x + ex * carrier.t;\n        const y = a.y + ey * carrier.t;\n        // main electron dot\n        ctx.beginPath();\n        ctx.arc(x, y, 1.3 * dpr, 0, Math.PI * 2);\n        ctx.fill();\n        // minus sign overlay\n        ctx.fillStyle = 'rgba(6,182,212,0.95)';\n        ctx.fillText('-', x, y - 0.3 * dpr);\n        ctx.fillStyle = 'rgba(6,182,212,0.9)';\n        // faint forward line to indicate direction\n        ctx.beginPath();\n        ctx.moveTo(x - ex * 0.02, y - ey * 0.02);\n        ctx.lineTo(x, y);\n        ctx.stroke();\n      }\n    }\n\n    // Draw nodes minimal (small pads, no shadow)\n    ctx.fillStyle = 'rgba(59, 130, 246, 0.6)';\n    for (let i = 0; i < nodes.length; i++) {\n      const n = nodes[i];\n      ctx.beginPath();\n      ctx.arc(n.x, n.y, 1.1 * dpr, 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    // Random pulses: bright transient dots traveling fast on random edges\n    // Schedule pulses at irregular intervals\n    if (performance.now() >= nextPulseAt.current && edges.length > 0) {\n      const count = Math.random() < 0.6 ? 1 : 2; // occasionally two\n      for (let k = 0; k < count; k++) {\n        const eidx = Math.random() * edges.length | 0;\n        pulses.push({\n          e: eidx,\n          t: 0,\n          v: 0.0025 + Math.random() * 0.0025,\n          alpha: 1\n        });\n      }\n      nextPulseAt.current = performance.now() + 900 + Math.random() * 1800;\n    }\n\n    // Update/draw pulses\n    for (let i = pulses.length - 1; i >= 0; i--) {\n      const p = pulses[i];\n      const edge = edges[p.e];\n      const a = nodes[edge.a];\n      const b = nodes[edge.b];\n      p.t += p.v * dt;\n      p.alpha *= 0.996; // slow fade\n      if (p.t > 1 || p.alpha < 0.12) {\n        pulses.splice(i, 1);\n        continue;\n      }\n      const x = a.x + (b.x - a.x) * p.t;\n      const y = a.y + (b.y - a.y) * p.t;\n      ctx.save();\n      ctx.globalAlpha = p.alpha;\n      ctx.fillStyle = 'rgba(248, 250, 252, 0.95)'; // near-white\n      ctx.beginPath();\n      ctx.arc(x, y, 1.6 * dpr, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n    }\n\n    // Cursor ring (smaller and subtler)\n    if (mouse.current.active) {\n      ctx.globalAlpha = 0.5;\n      const attracting = mouse.current.attract;\n      ctx.strokeStyle = attracting ? 'rgba(34,197,94,0.7)' : 'rgba(239,68,68,0.7)';\n      ctx.lineWidth = 1.5 * dpr;\n      ctx.beginPath();\n      ctx.arc(mouse.current.x * dpr, mouse.current.y * dpr, 14 * dpr, 0, Math.PI * 2);\n      ctx.stroke();\n      // Draw a plus sign at the cursor to indicate positive probe\n      ctx.globalAlpha = 0.8;\n      ctx.fillStyle = attracting ? 'rgba(34,197,94,0.9)' : 'rgba(239,68,68,0.9)';\n      ctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText('+', mouse.current.x * dpr, mouse.current.y * dpr);\n      ctx.globalAlpha = 1;\n    }\n  };\n  useEffect(() => {\n    const sCanvas = staticRef.current;\n    const dCanvas = dynamicRef.current;\n    if (!sCanvas || !dCanvas) return;\n    if (reduceMotion) {\n      // Reduced motion: draw static only\n      init();\n      return;\n    }\n    init();\n    let last = performance.now();\n    let accum = 0;\n    const tick = now => {\n      if (!runningRef.current) return;\n      const frame = now - last;\n      last = now;\n      accum += frame;\n      // Update at ~30fps for perf, render when updated\n      if (accum >= 33) {\n        const dt = Math.min(33, accum);\n        accum = 0;\n        step(dt);\n      }\n      rafRef.current = requestAnimationFrame(tick);\n    };\n    const start = () => {\n      if (runningRef.current) return;\n      runningRef.current = true;\n      last = performance.now();\n      rafRef.current = requestAnimationFrame(tick);\n    };\n    const stop = () => {\n      runningRef.current = false;\n      if (rafRef.current) cancelAnimationFrame(rafRef.current);\n      rafRef.current = null;\n    };\n\n    // Intersection Observer to pause when offscreen\n    const io = new IntersectionObserver(entries => {\n      for (const e of entries) {\n        if (e.isIntersecting) start();else stop();\n      }\n    }, {\n      root: null,\n      threshold: 0.05\n    });\n    io.observe(dCanvas);\n\n    // Resize handler\n    const onResize = () => {\n      init();\n    };\n    window.addEventListener('resize', onResize);\n\n    // Mouse and keyboard for interaction\n    const onMove = e => {\n      const now = performance.now();\n      mouse.current.x = e.clientX;\n      mouse.current.y = e.clientY;\n      mouse.current.active = true;\n      // update velocity (px/ms)\n      const {\n        lastX,\n        lastY,\n        lastT\n      } = mouseKinetics.current;\n      if (lastT !== 0) {\n        const dx = e.clientX - lastX;\n        const dy = e.clientY - lastY;\n        const dtms = Math.max(1, now - lastT);\n        mouseKinetics.current.speed = Math.hypot(dx, dy) / dtms;\n      }\n      mouseKinetics.current.lastX = e.clientX;\n      mouseKinetics.current.lastY = e.clientY;\n      mouseKinetics.current.lastT = now;\n    };\n    const onLeave = () => {\n      mouse.current.active = false;\n    };\n    const onKey = e => {\n      // Hold Alt to attract (green ring), release for repulsion (red)\n      mouse.current.attract = e.altKey;\n    };\n    window.addEventListener('mousemove', onMove);\n    window.addEventListener('mouseleave', onLeave);\n    window.addEventListener('keydown', onKey);\n    window.addEventListener('keyup', onKey);\n    return () => {\n      stop();\n      io.disconnect();\n      window.removeEventListener('resize', onResize);\n      window.removeEventListener('mousemove', onMove);\n      window.removeEventListener('mouseleave', onLeave);\n      window.removeEventListener('keydown', onKey);\n      window.removeEventListener('keyup', onKey);\n    };\n  }, [reduceMotion, init]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute inset-0 w-full h-full pointer-events-none select-none\",\n    \"aria-hidden\": true,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: staticRef,\n      className: \"absolute inset-0 w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: dynamicRef,\n      className: \"absolute inset-0 w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(CircuitField, \"V5UNsmKoc3GYVV2FYl/+PpfNwYA=\", false, function () {\n  return [useReducedMotion];\n});\n_c = CircuitField;\nexport default CircuitField;\nvar _c;\n$RefreshReg$(_c, \"CircuitField\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","useReducedMotion","jsxDEV","_jsxDEV","CircuitField","_s","staticRef","dynamicRef","runningRef","rafRef","reduceMotion","mouse","x","y","active","attract","mouseKinetics","lastX","lastY","lastT","speed","dprRef","stateRef","nextPulseAt","performance","now","timeRef","rand","min","max","Math","random","init","staticCanvas","current","dynamicCanvas","rect","getBoundingClientRect","dpr","window","devicePixelRatio","width","floor","height","w","h","targetCols","targetRows","cols","rows","xStep","yStep","nodes","j","i","x0","y0","push","vx","vy","idx","edges","a","connect","ii","jj","b","hasCarrier","carriers","t","v","pulses","sctx","getContext","clearRect","globalAlpha","strokeStyle","lineWidth","grid","beginPath","moveTo","lineTo","stroke","e","length","edge","fillStyle","n","arc","PI","fill","step","dt","st","canvas","ctx","spring","damping","baseMouseForce","influenceR2","attenuation","mouseForce","ax","ay","fx","fy","dx","dy","r2","inv","sqrt","dirx","diry","sign","mag","font","textAlign","textBaseline","ex","ey","phase","clock","sin","c","carrier","fillText","count","k","eidx","alpha","p","splice","save","restore","attracting","sCanvas","dCanvas","last","accum","tick","frame","requestAnimationFrame","start","stop","cancelAnimationFrame","io","IntersectionObserver","entries","isIntersecting","root","threshold","observe","onResize","addEventListener","onMove","clientX","clientY","dtms","hypot","onLeave","onKey","altKey","disconnect","removeEventListener","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/cvanbibber.github.io/src/components/CircuitField.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\r\nimport { useReducedMotion } from 'motion/react';\r\n\r\n/**\r\n * CircuitField: Electronics-themed interactive background (optimized)\r\n * - Static canvas: PCB-like grid and copper traces (wires)\r\n * - Dynamic canvas: electrons (carriers) flowing along traces + subtle node motion\r\n * - Cursor = charged probe (repel by default, hold Alt to attract)\r\n * - Pauses offscreen, respects Reduced Motion. Lower density and no heavy blur for perf.\r\n */\r\nconst CircuitField: React.FC = () => {\r\n  const staticRef = useRef<HTMLCanvasElement | null>(null);\r\n  const dynamicRef = useRef<HTMLCanvasElement | null>(null);\r\n  const runningRef = useRef(false);\r\n  const rafRef = useRef<number | null>(null);\r\n  const reduceMotion = useReducedMotion();\r\n\r\n  const mouse = useRef({ x: 0, y: 0, active: false, attract: false });\r\n  const mouseKinetics = useRef({ lastX: 0, lastY: 0, lastT: 0, speed: 0 }); // px/ms\r\n  const dprRef = useRef<number>(1);\r\n\r\n  // Internal simulation state\r\n  const stateRef = useRef<{\r\n    nodes: Array<{ x: number; y: number; x0: number; y0: number; vx: number; vy: number }>;\r\n    // only right and down connections for clearer circuit feel\r\n    edges: Array<{ a: number; b: number; carriers: Array<{ t: number; v: number }> }>;\r\n    w: number;\r\n    h: number;\r\n    pulses: Array<{ e: number; t: number; v: number; alpha: number }>; // transient energy pulses\r\n  } | null>(null);\r\n  const nextPulseAt = useRef<number>(performance.now() + 1500);\r\n  const timeRef = useRef<number>(0);\r\n\r\n  const rand = (min: number, max: number) => Math.random() * (max - min) + min;\r\n\r\n  const init = useCallback(() => {\r\n    const staticCanvas = staticRef.current;\r\n    const dynamicCanvas = dynamicRef.current;\r\n    if (!staticCanvas || !dynamicCanvas) return;\r\n\r\n    const rect = staticCanvas.getBoundingClientRect();\r\n    const dpr = Math.min(window.devicePixelRatio || 1, 1.5); // cap for perf\r\n    dprRef.current = dpr;\r\n\r\n    const width = Math.floor(rect.width * dpr);\r\n    const height = Math.floor(rect.height * dpr);\r\n    staticCanvas.width = width; staticCanvas.height = height;\r\n    dynamicCanvas.width = width; dynamicCanvas.height = height;\r\n\r\n    const w = width;\r\n    const h = height;\r\n\r\n    // Lower density for performance\r\n    const targetCols = Math.max(12, Math.min(18, Math.floor(rect.width / 70)));\r\n    const targetRows = Math.max(7, Math.min(12, Math.floor(rect.height / 70)));\r\n    const cols = targetCols;\r\n    const rows = targetRows;\r\n    const xStep = w / (cols + 1);\r\n    const yStep = h / (rows + 1);\r\n\r\n    const nodes: Array<{ x: number; y: number; x0: number; y0: number; vx: number; vy: number }> = [];\r\n\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        const x0 = (i + 1) * xStep + rand(-0.05, 0.05) * xStep;\r\n        const y0 = (j + 1) * yStep + rand(-0.05, 0.05) * yStep;\r\n        nodes.push({ x: x0, y: y0, x0, y0, vx: 0, vy: 0 });\r\n      }\r\n    }\r\n\r\n    const idx = (i: number, j: number) => j * cols + i;\r\n\r\n    // Only right and down connections; fewer carriers\r\n  const edges: Array<{ a: number; b: number; carriers: Array<{ t: number; v: number }> }> = [];\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        const a = idx(i, j);\r\n        const connect = (ii: number, jj: number) => {\r\n          if (ii >= 0 && ii < cols && jj >= 0 && jj < rows) {\r\n            const b = idx(ii, jj);\r\n            if (a < b) {\r\n              // Only put carriers on some edges for subtlety\r\n              const hasCarrier = Math.random() < 0.35;\r\n              const carriers = hasCarrier\r\n                ? [{ t: Math.random(), v: rand(0.00035, 0.001) }]\r\n                : [];\r\n              edges.push({ a, b, carriers });\r\n            }\r\n          }\r\n        };\r\n        connect(i + 1, j); // right\r\n        connect(i, j + 1); // down\r\n      }\r\n    }\r\n\r\n  stateRef.current = { nodes, edges, w, h, pulses: [] };\r\n\r\n    // Draw static once: background grid + traces\r\n    const sctx = staticCanvas.getContext('2d');\r\n    if (!sctx) return;\r\n    sctx.clearRect(0, 0, w, h);\r\n\r\n    // Subtle board grid\r\n    sctx.globalAlpha = 0.18;\r\n    sctx.strokeStyle = '#0891b2'; // cyan-700-ish\r\n    sctx.lineWidth = 1 * dpr;\r\n    const grid = 72 * dpr;\r\n    for (let x = 0; x < w; x += grid) { sctx.beginPath(); sctx.moveTo(x, 0); sctx.lineTo(x, h); sctx.stroke(); }\r\n    for (let y = 0; y < h; y += grid) { sctx.beginPath(); sctx.moveTo(0, y); sctx.lineTo(w, y); sctx.stroke(); }\r\n\r\n    // Copper traces (wires)\r\n    sctx.globalAlpha = 1;\r\n    sctx.strokeStyle = 'rgba(30, 64, 175, 0.25)'; // blue-800 low-alpha\r\n    sctx.lineWidth = 1 * dpr;\r\n    for (let e = 0; e < edges.length; e++) {\r\n      const edge = edges[e];\r\n      // only draw if near-horizontal/vertical lines (they are by construction)\r\n      const a = nodes[edge.a];\r\n      const b = nodes[edge.b];\r\n      sctx.beginPath(); sctx.moveTo(a.x, a.y); sctx.lineTo(b.x, b.y); sctx.stroke();\r\n    }\r\n\r\n    // Junction pads (very subtle)\r\n    sctx.fillStyle = 'rgba(59, 130, 246, 0.5)'; // blue-500\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const n = nodes[i];\r\n      sctx.beginPath(); sctx.arc(n.x, n.y, 1.2 * dpr, 0, Math.PI * 2); sctx.fill();\r\n    }\r\n  }, []);\r\n\r\n  const step = (dt: number) => {\r\n    const st = stateRef.current;\r\n    const canvas = dynamicRef.current;\r\n    if (!st || !canvas) return;\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n  const { nodes, edges, w, h, pulses } = st;\r\n    const dpr = dprRef.current;\r\n  timeRef.current += dt;\r\n\r\n    // Physics parameters (subtle)\r\n    const spring = 0.006;\r\n    const damping = 0.94;\r\n  const baseMouseForce = 7000;\r\n    const influenceR2 = (140 * dpr) * (140 * dpr);\r\n  // Cursor velocity attenuation: faster mouse => weaker influence\r\n  const speed = mouseKinetics.current.speed; // px/ms\r\n  const attenuation = 1 / (1 + 3.5 * speed); // tune factor 3.5\r\n  const mouseForce = baseMouseForce * attenuation;\r\n\r\n    // Update nodes (small drift, slight response to cursor)\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const n = nodes[i];\r\n      const ax = (n.x0 - n.x) * spring;\r\n      const ay = (n.y0 - n.y) * spring;\r\n      let fx = ax, fy = ay;\r\n      if (mouse.current.active) {\r\n        const dx = (mouse.current.x * dpr) - n.x;\r\n        const dy = (mouse.current.y * dpr) - n.y;\r\n        const r2 = dx * dx + dy * dy + 0.001;\r\n        if (r2 < influenceR2) {\r\n          const inv = 1 / Math.sqrt(r2);\r\n          const dirx = dx * inv;\r\n          const diry = dy * inv;\r\n          const sign = mouse.current.attract ? 1 : -1;\r\n          const mag = (mouseForce / r2) * sign;\r\n          fx += dirx * mag;\r\n          fy += diry * mag;\r\n        }\r\n      }\r\n      n.vx = (n.vx + fx) * damping;\r\n      n.vy = (n.vy + fy) * damping;\r\n      n.x += n.vx * dt;\r\n      n.y += n.vy * dt;\r\n    }\r\n\r\n    // Clear dynamic layer\r\n    ctx.clearRect(0, 0, w, h);\r\n\r\n    // Draw carriers (electrons) with minus sign\r\n    ctx.fillStyle = 'rgba(6,182,212,0.9)'; // cyan-500\r\n    ctx.strokeStyle = 'rgba(6,182,212,0.25)';\r\n    ctx.lineWidth = 1 * dpr;\r\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    for (let e = 0; e < edges.length; e++) {\r\n      const edge = edges[e];\r\n      if (edge.carriers.length === 0) continue;\r\n      const a = nodes[edge.a];\r\n      const b = nodes[edge.b];\r\n      const ex = b.x - a.x;\r\n      const ey = b.y - a.y;\r\n      // Clock modulation: gentle global sweep by x-position and time\r\n      const phase = (a.x / w) * Math.PI * 2 + timeRef.current * 0.0015;\r\n      const clock = 1 + 0.15 * Math.sin(phase);\r\n      for (let c = 0; c < edge.carriers.length; c++) {\r\n        const carrier = edge.carriers[c];\r\n        carrier.t += carrier.v * dt * clock;\r\n        if (carrier.t > 1) carrier.t -= 1;\r\n        const x = a.x + ex * carrier.t;\r\n        const y = a.y + ey * carrier.t;\r\n        // main electron dot\r\n        ctx.beginPath(); ctx.arc(x, y, 1.3 * dpr, 0, Math.PI * 2); ctx.fill();\r\n        // minus sign overlay\r\n        ctx.fillStyle = 'rgba(6,182,212,0.95)';\r\n        ctx.fillText('-', x, y - 0.3 * dpr);\r\n        ctx.fillStyle = 'rgba(6,182,212,0.9)';\r\n        // faint forward line to indicate direction\r\n        ctx.beginPath(); ctx.moveTo(x - ex * 0.02, y - ey * 0.02); ctx.lineTo(x, y); ctx.stroke();\r\n      }\r\n    }\r\n\r\n    // Draw nodes minimal (small pads, no shadow)\r\n    ctx.fillStyle = 'rgba(59, 130, 246, 0.6)';\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const n = nodes[i];\r\n      ctx.beginPath(); ctx.arc(n.x, n.y, 1.1 * dpr, 0, Math.PI * 2); ctx.fill();\r\n    }\r\n\r\n    // Random pulses: bright transient dots traveling fast on random edges\r\n    // Schedule pulses at irregular intervals\r\n    if (performance.now() >= nextPulseAt.current && edges.length > 0) {\r\n      const count = Math.random() < 0.6 ? 1 : 2; // occasionally two\r\n      for (let k = 0; k < count; k++) {\r\n        const eidx = (Math.random() * edges.length) | 0;\r\n        pulses.push({ e: eidx, t: 0, v: 0.0025 + Math.random() * 0.0025, alpha: 1 });\r\n      }\r\n      nextPulseAt.current = performance.now() + 900 + Math.random() * 1800;\r\n    }\r\n\r\n    // Update/draw pulses\r\n    for (let i = pulses.length - 1; i >= 0; i--) {\r\n      const p = pulses[i];\r\n      const edge = edges[p.e];\r\n      const a = nodes[edge.a]; const b = nodes[edge.b];\r\n      p.t += p.v * dt;\r\n      p.alpha *= 0.996; // slow fade\r\n      if (p.t > 1 || p.alpha < 0.12) { pulses.splice(i, 1); continue; }\r\n      const x = a.x + (b.x - a.x) * p.t;\r\n      const y = a.y + (b.y - a.y) * p.t;\r\n      ctx.save();\r\n      ctx.globalAlpha = p.alpha;\r\n      ctx.fillStyle = 'rgba(248, 250, 252, 0.95)'; // near-white\r\n      ctx.beginPath(); ctx.arc(x, y, 1.6 * dpr, 0, Math.PI * 2); ctx.fill();\r\n      ctx.restore();\r\n    }\r\n\r\n    // Cursor ring (smaller and subtler)\r\n    if (mouse.current.active) {\r\n      ctx.globalAlpha = 0.5;\r\n      const attracting = mouse.current.attract;\r\n      ctx.strokeStyle = attracting ? 'rgba(34,197,94,0.7)' : 'rgba(239,68,68,0.7)';\r\n      ctx.lineWidth = 1.5 * dpr;\r\n      ctx.beginPath(); ctx.arc(mouse.current.x * dpr, mouse.current.y * dpr, 14 * dpr, 0, Math.PI * 2); ctx.stroke();\r\n      // Draw a plus sign at the cursor to indicate positive probe\r\n      ctx.globalAlpha = 0.8;\r\n      ctx.fillStyle = attracting ? 'rgba(34,197,94,0.9)' : 'rgba(239,68,68,0.9)';\r\n      ctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fillText('+', mouse.current.x * dpr, mouse.current.y * dpr);\r\n      ctx.globalAlpha = 1;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sCanvas = staticRef.current;\r\n    const dCanvas = dynamicRef.current;\r\n    if (!sCanvas || !dCanvas) return;\r\n\r\n    if (reduceMotion) {\r\n      // Reduced motion: draw static only\r\n      init();\r\n      return;\r\n    }\r\n\r\n    init();\r\n\r\n    let last = performance.now();\r\n    let accum = 0;\r\n    const tick = (now: number) => {\r\n      if (!runningRef.current) return;\r\n      const frame = now - last;\r\n      last = now;\r\n      accum += frame;\r\n      // Update at ~30fps for perf, render when updated\r\n      if (accum >= 33) {\r\n        const dt = Math.min(33, accum);\r\n        accum = 0;\r\n        step(dt);\r\n      }\r\n      rafRef.current = requestAnimationFrame(tick);\r\n    };\r\n\r\n    const start = () => {\r\n      if (runningRef.current) return;\r\n      runningRef.current = true;\r\n      last = performance.now();\r\n      rafRef.current = requestAnimationFrame(tick);\r\n    };\r\n    const stop = () => {\r\n      runningRef.current = false;\r\n      if (rafRef.current) cancelAnimationFrame(rafRef.current);\r\n      rafRef.current = null;\r\n    };\r\n\r\n    // Intersection Observer to pause when offscreen\r\n  const io = new IntersectionObserver(\r\n      (entries) => {\r\n        for (const e of entries) {\r\n          if (e.isIntersecting) start();\r\n          else stop();\r\n        }\r\n      },\r\n      { root: null, threshold: 0.05 }\r\n    );\r\n  io.observe(dCanvas);\r\n\r\n    // Resize handler\r\n  const onResize = () => { init(); };\r\n    window.addEventListener('resize', onResize);\r\n\r\n    // Mouse and keyboard for interaction\r\n    const onMove = (e: MouseEvent) => {\r\n      const now = performance.now();\r\n      mouse.current.x = e.clientX;\r\n      mouse.current.y = e.clientY;\r\n      mouse.current.active = true;\r\n      // update velocity (px/ms)\r\n      const { lastX, lastY, lastT } = mouseKinetics.current;\r\n      if (lastT !== 0) {\r\n        const dx = e.clientX - lastX;\r\n        const dy = e.clientY - lastY;\r\n        const dtms = Math.max(1, now - lastT);\r\n        mouseKinetics.current.speed = Math.hypot(dx, dy) / dtms;\r\n      }\r\n      mouseKinetics.current.lastX = e.clientX;\r\n      mouseKinetics.current.lastY = e.clientY;\r\n      mouseKinetics.current.lastT = now;\r\n    };\r\n    const onLeave = () => { mouse.current.active = false; };\r\n    const onKey = (e: KeyboardEvent) => {\r\n      // Hold Alt to attract (green ring), release for repulsion (red)\r\n      mouse.current.attract = e.altKey;\r\n    };\r\n\r\n    window.addEventListener('mousemove', onMove);\r\n    window.addEventListener('mouseleave', onLeave);\r\n    window.addEventListener('keydown', onKey);\r\n    window.addEventListener('keyup', onKey);\r\n\r\n    return () => {\r\n      stop();\r\n      io.disconnect();\r\n      window.removeEventListener('resize', onResize);\r\n      window.removeEventListener('mousemove', onMove);\r\n      window.removeEventListener('mouseleave', onLeave);\r\n      window.removeEventListener('keydown', onKey);\r\n      window.removeEventListener('keyup', onKey);\r\n    };\r\n  }, [reduceMotion, init]);\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 w-full h-full pointer-events-none select-none\" aria-hidden>\r\n      <canvas ref={staticRef} className=\"absolute inset-0 w-full h-full\" />\r\n      <canvas ref={dynamicRef} className=\"absolute inset-0 w-full h-full\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}