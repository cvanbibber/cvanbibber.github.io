{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\cvanbibber.github.io\\\\src\\\\components\\\\ElectronField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\n\n// Canvas-based electron field with simple physics and mouse repulsion\n// Lightweight and runs only when the hero is in view via IntersectionObserver\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElectronField = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const animRef = useRef(null);\n  const runningRef = useRef(false);\n  const mouse = useRef({\n    x: 0,\n    y: 0,\n    active: false\n  });\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width;\n      canvas.height = rect.height;\n    };\n    resize();\n    window.addEventListener('resize', resize);\n    const electrons = Array.from({\n      length: 32\n    }).map(() => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      vx: (Math.random() - 0.5) * 0.6,\n      vy: (Math.random() - 0.5) * 0.6,\n      q: -1 // charge (all electrons)\n    }));\n    const tick = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw subtle conductive path lines\n      ctx.strokeStyle = 'rgba(100, 181, 246, 0.15)';\n      ctx.lineWidth = 1;\n      for (let i = 0; i < electrons.length; i++) {\n        for (let j = i + 1; j < electrons.length; j++) {\n          const a = electrons[i];\n          const b = electrons[j];\n          const dx = a.x - b.x;\n          const dy = a.y - b.y;\n          const d2 = dx * dx + dy * dy;\n          if (d2 < 120 * 120) {\n            const alpha = 0.2 * (1 - d2 / (120 * 120));\n            ctx.globalAlpha = alpha;\n            ctx.beginPath();\n            ctx.moveTo(a.x, a.y);\n            ctx.lineTo(b.x, b.y);\n            ctx.stroke();\n            ctx.globalAlpha = 1;\n          }\n        }\n      }\n\n      // Update electrons with mouse repulsion and mild friction\n      electrons.forEach(e => {\n        if (mouse.current.active) {\n          const dx = e.x - mouse.current.x;\n          const dy = e.y - mouse.current.y;\n          const d2 = dx * dx + dy * dy + 0.001;\n          const force = 12000 / d2; // inverse-square\n          e.vx += dx / Math.sqrt(d2) * force * 0.05;\n          e.vy += dy / Math.sqrt(d2) * force * 0.05;\n        }\n        // friction\n        e.vx *= 0.992;\n        e.vy *= 0.992;\n        // move\n        e.x += e.vx;\n        e.y += e.vy;\n        // bounds reflect\n        if (e.x < 0 || e.x > canvas.width) e.vx *= -1;\n        if (e.y < 0 || e.y > canvas.height) e.vy *= -1;\n        e.x = Math.max(0, Math.min(canvas.width, e.x));\n        e.y = Math.max(0, Math.min(canvas.height, e.y));\n      });\n\n      // Draw electrons\n      electrons.forEach(e => {\n        ctx.beginPath();\n        ctx.arc(e.x, e.y, 2, 0, Math.PI * 2);\n        ctx.fillStyle = 'rgba(56, 189, 248, 0.9)';\n        ctx.fill();\n      });\n      animRef.current = requestAnimationFrame(tick);\n    };\n    const start = () => {\n      if (!runningRef.current) {\n        runningRef.current = true;\n        animRef.current = requestAnimationFrame(tick);\n      }\n    };\n    const stop = () => {\n      if (runningRef.current) {\n        runningRef.current = false;\n        if (animRef.current) cancelAnimationFrame(animRef.current);\n      }\n    };\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) start();else stop();\n      });\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(containerRef.current);\n    const onMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      mouse.current.x = e.clientX - rect.left;\n      mouse.current.y = e.clientY - rect.top;\n      mouse.current.active = true;\n    };\n    const onLeave = () => mouse.current.active = false;\n    canvas.addEventListener('mousemove', onMove);\n    canvas.addEventListener('mouseleave', onLeave);\n    return () => {\n      window.removeEventListener('resize', resize);\n      observer.disconnect();\n      canvas.removeEventListener('mousemove', onMove);\n      canvas.removeEventListener('mouseleave', onLeave);\n      stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"absolute inset-0\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(ElectronField, \"7vna4eQ0GZdVMBKsd48EhAByTfI=\");\n_c = ElectronField;\nexport default ElectronField;\nvar _c;\n$RefreshReg$(_c, \"ElectronField\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ElectronField","_s","canvasRef","containerRef","animRef","runningRef","mouse","x","y","active","canvas","current","ctx","getContext","resize","rect","parentElement","getBoundingClientRect","width","height","window","addEventListener","electrons","Array","from","length","map","Math","random","vx","vy","q","tick","clearRect","strokeStyle","lineWidth","i","j","a","b","dx","dy","d2","alpha","globalAlpha","beginPath","moveTo","lineTo","stroke","forEach","e","force","sqrt","max","min","arc","PI","fillStyle","fill","requestAnimationFrame","start","stop","cancelAnimationFrame","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","onMove","clientX","left","clientY","top","onLeave","removeEventListener","disconnect","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/cvanbibber.github.io/src/components/ElectronField.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\n// Canvas-based electron field with simple physics and mouse repulsion\r\n// Lightweight and runs only when the hero is in view via IntersectionObserver\r\nconst ElectronField: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const animRef = useRef<number | null>(null);\r\n  const runningRef = useRef<boolean>(false);\r\n  const mouse = useRef({ x: 0, y: 0, active: false });\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const resize = () => {\r\n      const rect = canvas.parentElement!.getBoundingClientRect();\r\n      canvas.width = rect.width;\r\n      canvas.height = rect.height;\r\n    };\r\n    resize();\r\n    window.addEventListener('resize', resize);\r\n\r\n    const electrons = Array.from({ length: 32 }).map(() => ({\r\n      x: Math.random() * canvas.width,\r\n      y: Math.random() * canvas.height,\r\n      vx: (Math.random() - 0.5) * 0.6,\r\n      vy: (Math.random() - 0.5) * 0.6,\r\n      q: -1, // charge (all electrons)\r\n    }));\r\n\r\n    const tick = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Draw subtle conductive path lines\r\n      ctx.strokeStyle = 'rgba(100, 181, 246, 0.15)';\r\n      ctx.lineWidth = 1;\r\n      for (let i = 0; i < electrons.length; i++) {\r\n        for (let j = i + 1; j < electrons.length; j++) {\r\n          const a = electrons[i];\r\n          const b = electrons[j];\r\n          const dx = a.x - b.x;\r\n          const dy = a.y - b.y;\r\n          const d2 = dx * dx + dy * dy;\r\n          if (d2 < 120 * 120) {\r\n            const alpha = 0.2 * (1 - d2 / (120 * 120));\r\n            ctx.globalAlpha = alpha;\r\n            ctx.beginPath();\r\n            ctx.moveTo(a.x, a.y);\r\n            ctx.lineTo(b.x, b.y);\r\n            ctx.stroke();\r\n            ctx.globalAlpha = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Update electrons with mouse repulsion and mild friction\r\n      electrons.forEach(e => {\r\n        if (mouse.current.active) {\r\n          const dx = e.x - mouse.current.x;\r\n          const dy = e.y - mouse.current.y;\r\n          const d2 = dx * dx + dy * dy + 0.001;\r\n          const force = 12000 / d2; // inverse-square\r\n          e.vx += (dx / Math.sqrt(d2)) * force * 0.05;\r\n          e.vy += (dy / Math.sqrt(d2)) * force * 0.05;\r\n        }\r\n        // friction\r\n        e.vx *= 0.992;\r\n        e.vy *= 0.992;\r\n        // move\r\n        e.x += e.vx;\r\n        e.y += e.vy;\r\n        // bounds reflect\r\n        if (e.x < 0 || e.x > canvas.width) e.vx *= -1;\r\n        if (e.y < 0 || e.y > canvas.height) e.vy *= -1;\r\n        e.x = Math.max(0, Math.min(canvas.width, e.x));\r\n        e.y = Math.max(0, Math.min(canvas.height, e.y));\r\n      });\r\n\r\n      // Draw electrons\r\n      electrons.forEach(e => {\r\n        ctx.beginPath();\r\n        ctx.arc(e.x, e.y, 2, 0, Math.PI * 2);\r\n        ctx.fillStyle = 'rgba(56, 189, 248, 0.9)';\r\n        ctx.fill();\r\n      });\r\n\r\n      animRef.current = requestAnimationFrame(tick);\r\n    };\r\n\r\n    const start = () => {\r\n      if (!runningRef.current) {\r\n        runningRef.current = true;\r\n        animRef.current = requestAnimationFrame(tick);\r\n      }\r\n    };\r\n    const stop = () => {\r\n      if (runningRef.current) {\r\n        runningRef.current = false;\r\n        if (animRef.current) cancelAnimationFrame(animRef.current);\r\n      }\r\n    };\r\n\r\n    const observer = new IntersectionObserver(\r\n      entries => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) start();\r\n          else stop();\r\n        });\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n    observer.observe(containerRef.current!);\r\n\r\n    const onMove = (e: MouseEvent) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      mouse.current.x = e.clientX - rect.left;\r\n      mouse.current.y = e.clientY - rect.top;\r\n      mouse.current.active = true;\r\n    };\r\n    const onLeave = () => (mouse.current.active = false);\r\n\r\n    canvas.addEventListener('mousemove', onMove);\r\n    canvas.addEventListener('mouseleave', onLeave);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resize);\r\n      observer.disconnect();\r\n      canvas.removeEventListener('mousemove', onMove);\r\n      canvas.removeEventListener('mouseleave', onLeave);\r\n      stop();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"absolute inset-0\">\r\n      <canvas ref={canvasRef} className=\"w-full h-full\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ElectronField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}