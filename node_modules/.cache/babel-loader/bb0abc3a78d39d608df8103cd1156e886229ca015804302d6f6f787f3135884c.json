{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\cvanbibber.github.io\\\\src\\\\components\\\\TiltCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useReducedMotion } from 'motion/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * TiltCard: subtle 3D tilt on mouse move with reduced-motion respect.\r\n */\nconst TiltCard = ({\n  children,\n  className = '',\n  maxTiltDeg = 8,\n  scale = 1.02\n}) => {\n  _s();\n  const ref = useRef(null);\n  const reduce = useReducedMotion();\n  const handleMove = e => {\n    if (reduce) return; // respect reduced motion\n    const el = ref.current;\n    if (!el) return;\n    const rect = el.getBoundingClientRect();\n    const px = (e.clientX - rect.left) / rect.width; // 0..1\n    const py = (e.clientY - rect.top) / rect.height; // 0..1\n    const rx = (py - 0.5) * (maxTiltDeg * 2); // invert for natural tilt\n    const ry = (0.5 - px) * (maxTiltDeg * 2);\n    el.style.transform = `perspective(900px) rotateX(${rx.toFixed(2)}deg) rotateY(${ry.toFixed(2)}deg) scale(${scale})`;\n  };\n  const handleLeave = () => {\n    const el = ref.current;\n    if (!el) return;\n    el.style.transform = 'perspective(900px) rotateX(0deg) rotateY(0deg) scale(1)';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `[transform-style:preserve-3d] transition-transform duration-200 ease-out ${className}`,\n    onMouseMove: handleMove,\n    onMouseLeave: handleLeave\n    // small initial transform for GPU hint\n    ,\n    style: {\n      transform: 'perspective(900px) rotateX(0deg) rotateY(0deg) scale(1)'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(TiltCard, \"pxBm3wI+/vyIwXtcyC4JHmjbaBQ=\", false, function () {\n  return [useReducedMotion];\n});\n_c = TiltCard;\nexport default TiltCard;\nvar _c;\n$RefreshReg$(_c, \"TiltCard\");","map":{"version":3,"names":["React","useRef","useReducedMotion","jsxDEV","_jsxDEV","TiltCard","children","className","maxTiltDeg","scale","_s","ref","reduce","handleMove","e","el","current","rect","getBoundingClientRect","px","clientX","left","width","py","clientY","top","height","rx","ry","style","transform","toFixed","handleLeave","onMouseMove","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/cvanbibber.github.io/src/components/TiltCard.tsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useReducedMotion } from 'motion/react';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  maxTiltDeg?: number; // maximum tilt in degrees\r\n  scale?: number; // hover scale\r\n};\r\n\r\n/**\r\n * TiltCard: subtle 3D tilt on mouse move with reduced-motion respect.\r\n */\r\nconst TiltCard: React.FC<Props> = ({ children, className = '', maxTiltDeg = 8, scale = 1.02 }) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const reduce = useReducedMotion();\r\n\r\n  const handleMove = (e: React.MouseEvent) => {\r\n    if (reduce) return; // respect reduced motion\r\n    const el = ref.current;\r\n    if (!el) return;\r\n    const rect = el.getBoundingClientRect();\r\n    const px = (e.clientX - rect.left) / rect.width; // 0..1\r\n    const py = (e.clientY - rect.top) / rect.height; // 0..1\r\n    const rx = (py - 0.5) * (maxTiltDeg * 2); // invert for natural tilt\r\n    const ry = (0.5 - px) * (maxTiltDeg * 2);\r\n    el.style.transform = `perspective(900px) rotateX(${rx.toFixed(2)}deg) rotateY(${ry.toFixed(2)}deg) scale(${scale})`;\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    const el = ref.current;\r\n    if (!el) return;\r\n    el.style.transform = 'perspective(900px) rotateX(0deg) rotateY(0deg) scale(1)';\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={`[transform-style:preserve-3d] transition-transform duration-200 ease-out ${className}`}\r\n      onMouseMove={handleMove}\r\n      onMouseLeave={handleLeave}\r\n      // small initial transform for GPU hint\r\n      style={{ transform: 'perspective(900px) rotateX(0deg) rotateY(0deg) scale(1)' }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TiltCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAShD;AACA;AACA;AACA,MAAMC,QAAyB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG,EAAE;EAAEC,UAAU,GAAG,CAAC;EAAEC,KAAK,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChG,MAAMC,GAAG,GAAGV,MAAM,CAAiB,IAAI,CAAC;EACxC,MAAMW,MAAM,GAAGV,gBAAgB,CAAC,CAAC;EAEjC,MAAMW,UAAU,GAAIC,CAAmB,IAAK;IAC1C,IAAIF,MAAM,EAAE,OAAO,CAAC;IACpB,MAAMG,EAAE,GAAGJ,GAAG,CAACK,OAAO;IACtB,IAAI,CAACD,EAAE,EAAE;IACT,MAAME,IAAI,GAAGF,EAAE,CAACG,qBAAqB,CAAC,CAAC;IACvC,MAAMC,EAAE,GAAG,CAACL,CAAC,CAACM,OAAO,GAAGH,IAAI,CAACI,IAAI,IAAIJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACjD,MAAMC,EAAE,GAAG,CAACT,CAAC,CAACU,OAAO,GAAGP,IAAI,CAACQ,GAAG,IAAIR,IAAI,CAACS,MAAM,CAAC,CAAC;IACjD,MAAMC,EAAE,GAAG,CAACJ,EAAE,GAAG,GAAG,KAAKf,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,MAAMoB,EAAE,GAAG,CAAC,GAAG,GAAGT,EAAE,KAAKX,UAAU,GAAG,CAAC,CAAC;IACxCO,EAAE,CAACc,KAAK,CAACC,SAAS,GAAG,8BAA8BH,EAAE,CAACI,OAAO,CAAC,CAAC,CAAC,gBAAgBH,EAAE,CAACG,OAAO,CAAC,CAAC,CAAC,cAActB,KAAK,GAAG;EACrH,CAAC;EAED,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMjB,EAAE,GAAGJ,GAAG,CAACK,OAAO;IACtB,IAAI,CAACD,EAAE,EAAE;IACTA,EAAE,CAACc,KAAK,CAACC,SAAS,GAAG,yDAAyD;EAChF,CAAC;EAED,oBACE1B,OAAA;IACEO,GAAG,EAAEA,GAAI;IACTJ,SAAS,EAAE,4EAA4EA,SAAS,EAAG;IACnG0B,WAAW,EAAEpB,UAAW;IACxBqB,YAAY,EAAEF;IACd;IAAA;IACAH,KAAK,EAAE;MAAEC,SAAS,EAAE;IAA0D,CAAE;IAAAxB,QAAA,EAE/EA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlCIL,QAAyB;EAAA,QAEdH,gBAAgB;AAAA;AAAAqC,EAAA,GAF3BlC,QAAyB;AAoC/B,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}