{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\cvanbibber.github.io\\\\src\\\\components\\\\CircuitField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport { useReducedMotion } from 'motion/react';\n\n/**\r\n * CircuitField: Electronics-themed interactive background (optimized)\r\n * - Static canvas: PCB-like grid and copper traces (wires)\r\n * - Dynamic canvas: electrons (carriers) flowing along traces + subtle node motion\r\n * - Cursor = charged probe (repel by default, hold Alt to attract)\r\n * - Pauses offscreen, respects Reduced Motion. Lower density and no heavy blur for perf.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircuitField = () => {\n  _s();\n  const staticRef = useRef(null);\n  const dynamicRef = useRef(null);\n  const runningRef = useRef(false);\n  const rafRef = useRef(null);\n  const reduceMotion = useReducedMotion();\n  const mouse = useRef({\n    x: 0,\n    y: 0,\n    active: false,\n    attract: false\n  });\n  const mouseKinetics = useRef({\n    lastX: 0,\n    lastY: 0,\n    lastT: 0,\n    speed: 0\n  }); // px/ms\n  const dprRef = useRef(1);\n\n  // Internal simulation state\n  const stateRef = useRef(null);\n  const nextPulseAt = useRef(performance.now() + 1500);\n  const timeRef = useRef(0);\n  const rand = (min, max) => Math.random() * (max - min) + min;\n  const init = useCallback(() => {\n    const staticCanvas = staticRef.current;\n    const dynamicCanvas = dynamicRef.current;\n    if (!staticCanvas || !dynamicCanvas) return;\n    const rect = staticCanvas.getBoundingClientRect();\n    const dpr = Math.min(window.devicePixelRatio || 1, 1.5); // cap for perf\n    dprRef.current = dpr;\n    const width = Math.floor(rect.width * dpr);\n    const height = Math.floor(rect.height * dpr);\n    staticCanvas.width = width;\n    staticCanvas.height = height;\n    dynamicCanvas.width = width;\n    dynamicCanvas.height = height;\n    const w = width;\n    const h = height;\n\n    // Lower density for performance\n    const targetCols = Math.max(12, Math.min(18, Math.floor(rect.width / 70)));\n    const targetRows = Math.max(7, Math.min(12, Math.floor(rect.height / 70)));\n    const cols = targetCols;\n    const rows = targetRows;\n    const xStep = w / (cols + 1);\n    const yStep = h / (rows + 1);\n    const nodes = [];\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        const x0 = (i + 1) * xStep + rand(-0.05, 0.05) * xStep;\n        const y0 = (j + 1) * yStep + rand(-0.05, 0.05) * yStep;\n        nodes.push({\n          x: x0,\n          y: y0,\n          x0,\n          y0,\n          vx: 0,\n          vy: 0\n        });\n      }\n    }\n    const idx = (i, j) => j * cols + i;\n\n    // Only right and down connections; fewer carriers\n    const edges = [];\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        const a = idx(i, j);\n        const connect = (ii, jj) => {\n          if (ii >= 0 && ii < cols && jj >= 0 && jj < rows) {\n            const b = idx(ii, jj);\n            if (a < b) {\n              // Only put carriers on some edges for subtlety\n              const hasCarrier = Math.random() < 0.35;\n              const carriers = hasCarrier ? [{\n                t: Math.random(),\n                v: rand(0.00035, 0.001)\n              }] : [];\n              edges.push({\n                a,\n                b,\n                carriers\n              });\n            }\n          }\n        };\n        connect(i + 1, j); // right\n        connect(i, j + 1); // down\n      }\n    }\n\n    // Define a power rail near the top\n    const railY = Math.round(h * 0.22);\n    const rail = {\n      y: railY,\n      carriers: new Array(12).fill(0).map(() => ({\n        x: Math.random() * w,\n        v: (0.08 + Math.random() * 0.06) * dpr // px/ms\n      }))\n    };\n\n    // Pick a couple of edges to mark with components (static aesthetics)\n    const componentEdges = [];\n    if (edges.length > 0) {\n      componentEdges.push(Math.random() * edges.length | 0);\n      componentEdges.push(Math.random() * edges.length | 0);\n    }\n    const components = [];\n    if (componentEdges[0] != null) components.push({\n      type: 'resistor',\n      e: componentEdges[0],\n      at: {\n        x: 0,\n        y: 0\n      }\n    });\n    if (componentEdges[1] != null) components.push({\n      type: 'capacitor',\n      e: componentEdges[1],\n      at: {\n        x: 0,\n        y: 0\n      }\n    });\n    // Ground symbol near bottom left\n    components.push({\n      type: 'ground',\n      at: {\n        x: Math.round(w * 0.08),\n        y: Math.round(h * 0.86)\n      }\n    });\n    stateRef.current = {\n      nodes,\n      edges,\n      w,\n      h,\n      pulses: [],\n      rail,\n      components\n    };\n\n    // Draw static once: background grid + traces\n    const sctx = staticCanvas.getContext('2d');\n    if (!sctx) return;\n    sctx.clearRect(0, 0, w, h);\n\n    // Subtle board grid\n    sctx.globalAlpha = 0.18;\n    sctx.strokeStyle = '#0891b2'; // cyan-700-ish\n    sctx.lineWidth = 1 * dpr;\n    const grid = 72 * dpr;\n    for (let x = 0; x < w; x += grid) {\n      sctx.beginPath();\n      sctx.moveTo(x, 0);\n      sctx.lineTo(x, h);\n      sctx.stroke();\n    }\n    for (let y = 0; y < h; y += grid) {\n      sctx.beginPath();\n      sctx.moveTo(0, y);\n      sctx.lineTo(w, y);\n      sctx.stroke();\n    }\n\n    // Copper traces (wires)\n    sctx.globalAlpha = 1;\n    sctx.strokeStyle = 'rgba(30, 64, 175, 0.25)'; // blue-800 low-alpha\n    sctx.lineWidth = 1 * dpr;\n    for (let e = 0; e < edges.length; e++) {\n      const edge = edges[e];\n      // only draw if near-horizontal/vertical lines (they are by construction)\n      const a = nodes[edge.a];\n      const b = nodes[edge.b];\n      sctx.beginPath();\n      sctx.moveTo(a.x, a.y);\n      sctx.lineTo(b.x, b.y);\n      sctx.stroke();\n    }\n\n    // Junction pads (very subtle)\n    sctx.fillStyle = 'rgba(59, 130, 246, 0.5)'; // blue-500\n    for (let i = 0; i < nodes.length; i++) {\n      const n = nodes[i];\n      sctx.beginPath();\n      sctx.arc(n.x, n.y, 1.2 * dpr, 0, Math.PI * 2);\n      sctx.fill();\n    }\n\n    // Draw the power rail (static line + plus marks)\n    sctx.strokeStyle = 'rgba(220, 38, 38, 0.45)'; // red-600\n    sctx.lineWidth = 2 * dpr;\n    sctx.beginPath();\n    sctx.moveTo(0, rail.y);\n    sctx.lineTo(w, rail.y);\n    sctx.stroke();\n    sctx.fillStyle = 'rgba(220, 38, 38, 0.75)';\n    sctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n    sctx.textAlign = 'center';\n    sctx.textBaseline = 'middle';\n    for (let x = 30 * dpr; x < w; x += 110 * dpr) {\n      sctx.fillText('+', x, rail.y - 6 * dpr);\n    }\n\n    // Draw component symbols on chosen edges\n    sctx.strokeStyle = 'rgba(30, 64, 175, 0.6)';\n    sctx.fillStyle = 'rgba(30, 64, 175, 0.6)';\n    sctx.lineWidth = 1 * dpr;\n    for (const comp of components) {\n      if (comp.type === 'ground') {\n        const gx = comp.at.x,\n          gy = comp.at.y;\n        // ground: three lines\n        sctx.beginPath();\n        sctx.moveTo(gx, gy - 10 * dpr);\n        sctx.lineTo(gx, gy - 2 * dpr);\n        sctx.stroke();\n        sctx.beginPath();\n        sctx.moveTo(gx - 6 * dpr, gy);\n        sctx.lineTo(gx + 6 * dpr, gy);\n        sctx.stroke();\n        sctx.beginPath();\n        sctx.moveTo(gx - 4 * dpr, gy + 3 * dpr);\n        sctx.lineTo(gx + 4 * dpr, gy + 3 * dpr);\n        sctx.stroke();\n        sctx.beginPath();\n        sctx.moveTo(gx - 2 * dpr, gy + 6 * dpr);\n        sctx.lineTo(gx + 2 * dpr, gy + 6 * dpr);\n        sctx.stroke();\n        continue;\n      }\n      const eidx = comp.e;\n      const edge = edges[eidx];\n      if (!edge) continue;\n      const a = nodes[edge.a];\n      const b = nodes[edge.b];\n      const mx = (a.x + b.x) / 2;\n      const my = (a.y + b.y) / 2;\n      const dx = b.x - a.x;\n      const dy = b.y - a.y;\n      const len = Math.hypot(dx, dy);\n      const ux = dx / (len || 1);\n      const uy = dy / (len || 1);\n      const px = -uy;\n      const py = ux; // perpendicular\n      if (comp.type === 'resistor') {\n        // zigzag\n        const seg = Math.min(6 * dpr, len / 8);\n        sctx.beginPath();\n        sctx.moveTo(mx - ux * 16 * dpr, my - uy * 16 * dpr);\n        for (let i = -6; i <= 6; i++) {\n          const t = i * seg;\n          const off = (i % 2 === 0 ? 3 : -3) * dpr;\n          sctx.lineTo(mx + ux * t + px * off, my + uy * t + py * off);\n        }\n        sctx.stroke();\n      } else if (comp.type === 'capacitor') {\n        // two plates\n        const plate = 6 * dpr;\n        sctx.beginPath();\n        sctx.moveTo(mx - ux * 8 * dpr + px * plate, my - uy * 8 * dpr + py * plate);\n        sctx.lineTo(mx - ux * 8 * dpr - px * plate, my - uy * 8 * dpr - py * plate);\n        sctx.stroke();\n        sctx.beginPath();\n        sctx.moveTo(mx + ux * 8 * dpr + px * plate, my + uy * 8 * dpr + py * plate);\n        sctx.lineTo(mx + ux * 8 * dpr - px * plate, my + uy * 8 * dpr - py * plate);\n        sctx.stroke();\n      }\n    }\n  }, []);\n  const step = dt => {\n    const st = stateRef.current;\n    const canvas = dynamicRef.current;\n    if (!st || !canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const {\n      nodes,\n      edges,\n      w,\n      h,\n      pulses,\n      rail\n    } = st;\n    const dpr = dprRef.current;\n    timeRef.current += dt;\n    const nowT = performance.now();\n\n    // Physics parameters (subtle)\n    const spring = 0.0035;\n    const damping = 0.90;\n    const baseMouseForce = 5000;\n    const influenceR2 = 120 * dpr * (120 * dpr);\n    // Cursor velocity attenuation: faster mouse => weaker influence\n    const speed = mouseKinetics.current.speed; // px/ms\n    const attenuation = 1 / (1 + 3.5 * speed); // tune factor 3.5\n    // Idle attenuation: if mouse hasn't moved recently, reduce influence further\n    const idleMs = mouseKinetics.current.lastT ? nowT - mouseKinetics.current.lastT : 0;\n    const idleFactor = idleMs > 3000 ? 0.0 : idleMs > 1500 ? 0.15 : idleMs > 600 ? 0.35 : 1;\n    const mouseForce = baseMouseForce * attenuation * idleFactor;\n    const maxVel = 0.06 * dpr; // clamp velocity for stability\n\n    // Update nodes (small drift, slight response to cursor)\n    for (let i = 0; i < nodes.length; i++) {\n      const n = nodes[i];\n      const ax = (n.x0 - n.x) * spring;\n      const ay = (n.y0 - n.y) * spring;\n      let fx = ax,\n        fy = ay;\n      if (mouse.current.active) {\n        const dx = mouse.current.x * dpr - n.x;\n        const dy = mouse.current.y * dpr - n.y;\n        const r2 = dx * dx + dy * dy + 0.001;\n        if (r2 < influenceR2) {\n          const inv = 1 / Math.sqrt(r2);\n          const dirx = dx * inv;\n          const diry = dy * inv;\n          const sign = mouse.current.attract ? 1 : -1;\n          const mag = mouseForce / r2 * sign;\n          fx += dirx * mag;\n          fy += diry * mag;\n        }\n      }\n      n.vx = (n.vx + fx) * damping;\n      n.vy = (n.vy + fy) * damping;\n      // clamp velocity\n      const vmag = Math.hypot(n.vx, n.vy);\n      if (vmag > maxVel) {\n        const s = maxVel / vmag;\n        n.vx *= s;\n        n.vy *= s;\n      }\n      n.x += n.vx * dt;\n      n.y += n.vy * dt;\n    }\n    // Power rail electrons: constant flow left->right\n    ctx.fillStyle = 'rgba(6,182,212,0.95)';\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    for (let i = 0; i < rail.carriers.length; i++) {\n      const carr = rail.carriers[i];\n      carr.x += carr.v * dt;\n      if (carr.x > w + 8 * dpr) carr.x -= w + 16 * dpr;\n      const x = carr.x;\n      const y = rail.y;\n      ctx.beginPath();\n      ctx.arc(x, y, 1.6 * dpr, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.fillText('-', x, y - 0.4 * dpr);\n    }\n\n    // Clear dynamic layer\n    ctx.clearRect(0, 0, w, h);\n\n    // Draw carriers (electrons) with minus sign\n    ctx.fillStyle = 'rgba(6,182,212,0.9)'; // cyan-500\n    ctx.strokeStyle = 'rgba(6,182,212,0.25)';\n    ctx.lineWidth = 1 * dpr;\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    for (let e = 0; e < edges.length; e++) {\n      const edge = edges[e];\n      if (edge.carriers.length === 0) continue;\n      const a = nodes[edge.a];\n      const b = nodes[edge.b];\n      const ex = b.x - a.x;\n      const ey = b.y - a.y;\n      // Clock modulation: gentle global sweep by x-position and time\n      const phase = a.x / w * Math.PI * 2 + timeRef.current * 0.0015;\n      const clock = 1 + 0.15 * Math.sin(phase);\n      for (let c = 0; c < edge.carriers.length; c++) {\n        const carrier = edge.carriers[c];\n        carrier.t += carrier.v * dt * clock;\n        if (carrier.t > 1) carrier.t -= 1;\n        const x = a.x + ex * carrier.t;\n        const y = a.y + ey * carrier.t;\n        // main electron dot\n        ctx.beginPath();\n        ctx.arc(x, y, 1.3 * dpr, 0, Math.PI * 2);\n        ctx.fill();\n        // minus sign overlay\n        ctx.fillStyle = 'rgba(6,182,212,0.95)';\n        ctx.fillText('-', x, y - 0.3 * dpr);\n        ctx.fillStyle = 'rgba(6,182,212,0.9)';\n        // faint forward line to indicate direction\n        ctx.beginPath();\n        ctx.moveTo(x - ex * 0.02, y - ey * 0.02);\n        ctx.lineTo(x, y);\n        ctx.stroke();\n      }\n    }\n\n    // Draw nodes minimal (small pads, no shadow)\n    ctx.fillStyle = 'rgba(59, 130, 246, 0.6)';\n    for (let i = 0; i < nodes.length; i++) {\n      const n = nodes[i];\n      ctx.beginPath();\n      ctx.arc(n.x, n.y, 1.1 * dpr, 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    // Random pulses: bright transient dots traveling fast on random edges\n    // Schedule pulses at irregular intervals\n    if (performance.now() >= nextPulseAt.current && edges.length > 0) {\n      const count = Math.random() < 0.6 ? 1 : 2; // occasionally two\n      for (let k = 0; k < count; k++) {\n        const eidx = Math.random() * edges.length | 0;\n        pulses.push({\n          e: eidx,\n          t: 0,\n          v: 0.0025 + Math.random() * 0.0025,\n          alpha: 1\n        });\n      }\n      nextPulseAt.current = performance.now() + 900 + Math.random() * 1800;\n    }\n\n    // Update/draw pulses\n    for (let i = pulses.length - 1; i >= 0; i--) {\n      const p = pulses[i];\n      const edge = edges[p.e];\n      const a = nodes[edge.a];\n      const b = nodes[edge.b];\n      p.t += p.v * dt;\n      p.alpha *= 0.996; // slow fade\n      if (p.t > 1 || p.alpha < 0.12) {\n        pulses.splice(i, 1);\n        continue;\n      }\n      const x = a.x + (b.x - a.x) * p.t;\n      const y = a.y + (b.y - a.y) * p.t;\n      ctx.save();\n      ctx.globalAlpha = p.alpha;\n      ctx.fillStyle = 'rgba(248, 250, 252, 0.95)'; // near-white\n      ctx.beginPath();\n      ctx.arc(x, y, 1.6 * dpr, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n    }\n\n    // Cursor ring (smaller and subtler)\n    if (mouse.current.active) {\n      ctx.globalAlpha = 0.5;\n      const attracting = mouse.current.attract;\n      ctx.strokeStyle = attracting ? 'rgba(34,197,94,0.7)' : 'rgba(239,68,68,0.7)';\n      ctx.lineWidth = 1.5 * dpr;\n      ctx.beginPath();\n      ctx.arc(mouse.current.x * dpr, mouse.current.y * dpr, 14 * dpr, 0, Math.PI * 2);\n      ctx.stroke();\n      // Draw a plus sign at the cursor to indicate positive probe\n      ctx.globalAlpha = 0.8;\n      ctx.fillStyle = attracting ? 'rgba(34,197,94,0.9)' : 'rgba(239,68,68,0.9)';\n      ctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText('+', mouse.current.x * dpr, mouse.current.y * dpr);\n      ctx.globalAlpha = 1;\n    }\n  };\n  useEffect(() => {\n    const sCanvas = staticRef.current;\n    const dCanvas = dynamicRef.current;\n    if (!sCanvas || !dCanvas) return;\n    if (reduceMotion) {\n      // Reduced motion: draw static only\n      init();\n      return;\n    }\n    init();\n    let last = performance.now();\n    let accum = 0;\n    const tick = now => {\n      if (!runningRef.current) return;\n      const frame = now - last;\n      last = now;\n      accum += frame;\n      // Update at ~30fps for perf, render when updated\n      if (accum >= 33) {\n        const dt = Math.min(33, accum);\n        accum = 0;\n        step(dt);\n      }\n      rafRef.current = requestAnimationFrame(tick);\n    };\n    const start = () => {\n      if (runningRef.current) return;\n      runningRef.current = true;\n      last = performance.now();\n      rafRef.current = requestAnimationFrame(tick);\n    };\n    const stop = () => {\n      runningRef.current = false;\n      if (rafRef.current) cancelAnimationFrame(rafRef.current);\n      rafRef.current = null;\n    };\n\n    // Intersection Observer to pause when offscreen\n    const io = new IntersectionObserver(entries => {\n      for (const e of entries) {\n        if (e.isIntersecting) start();else stop();\n      }\n    }, {\n      root: null,\n      threshold: 0.05\n    });\n    io.observe(dCanvas);\n\n    // Resize handler\n    const onResize = () => {\n      init();\n    };\n    window.addEventListener('resize', onResize);\n\n    // Mouse and keyboard for interaction\n    const onMove = e => {\n      const now = performance.now();\n      mouse.current.x = e.clientX;\n      mouse.current.y = e.clientY;\n      mouse.current.active = true;\n      // update velocity (px/ms)\n      const {\n        lastX,\n        lastY,\n        lastT\n      } = mouseKinetics.current;\n      if (lastT !== 0) {\n        const dx = e.clientX - lastX;\n        const dy = e.clientY - lastY;\n        const dtms = Math.max(1, now - lastT);\n        mouseKinetics.current.speed = Math.hypot(dx, dy) / dtms;\n      }\n      mouseKinetics.current.lastX = e.clientX;\n      mouseKinetics.current.lastY = e.clientY;\n      mouseKinetics.current.lastT = now;\n    };\n    const onLeave = () => {\n      mouse.current.active = false;\n    };\n    const onKey = e => {\n      // Hold Alt to attract (green ring), release for repulsion (red)\n      mouse.current.attract = e.altKey;\n    };\n    window.addEventListener('mousemove', onMove);\n    window.addEventListener('mouseleave', onLeave);\n    window.addEventListener('keydown', onKey);\n    window.addEventListener('keyup', onKey);\n    return () => {\n      stop();\n      io.disconnect();\n      window.removeEventListener('resize', onResize);\n      window.removeEventListener('mousemove', onMove);\n      window.removeEventListener('mouseleave', onLeave);\n      window.removeEventListener('keydown', onKey);\n      window.removeEventListener('keyup', onKey);\n    };\n  }, [reduceMotion, init]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute inset-0 w-full h-full pointer-events-none select-none\",\n    \"aria-hidden\": true,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: staticRef,\n      className: \"absolute inset-0 w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: dynamicRef,\n      className: \"absolute inset-0 w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n};\n_s(CircuitField, \"V5UNsmKoc3GYVV2FYl/+PpfNwYA=\", false, function () {\n  return [useReducedMotion];\n});\n_c = CircuitField;\nexport default CircuitField;\nvar _c;\n$RefreshReg$(_c, \"CircuitField\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","useReducedMotion","jsxDEV","_jsxDEV","CircuitField","_s","staticRef","dynamicRef","runningRef","rafRef","reduceMotion","mouse","x","y","active","attract","mouseKinetics","lastX","lastY","lastT","speed","dprRef","stateRef","nextPulseAt","performance","now","timeRef","rand","min","max","Math","random","init","staticCanvas","current","dynamicCanvas","rect","getBoundingClientRect","dpr","window","devicePixelRatio","width","floor","height","w","h","targetCols","targetRows","cols","rows","xStep","yStep","nodes","j","i","x0","y0","push","vx","vy","idx","edges","a","connect","ii","jj","b","hasCarrier","carriers","t","v","railY","round","rail","Array","fill","map","componentEdges","length","components","type","e","at","pulses","sctx","getContext","clearRect","globalAlpha","strokeStyle","lineWidth","grid","beginPath","moveTo","lineTo","stroke","edge","fillStyle","n","arc","PI","font","textAlign","textBaseline","fillText","comp","gx","gy","eidx","mx","my","dx","dy","len","hypot","ux","uy","px","py","seg","off","plate","step","dt","st","canvas","ctx","nowT","spring","damping","baseMouseForce","influenceR2","attenuation","idleMs","idleFactor","mouseForce","maxVel","ax","ay","fx","fy","r2","inv","sqrt","dirx","diry","sign","mag","vmag","s","carr","ex","ey","phase","clock","sin","c","carrier","count","k","alpha","p","splice","save","restore","attracting","sCanvas","dCanvas","last","accum","tick","frame","requestAnimationFrame","start","stop","cancelAnimationFrame","io","IntersectionObserver","entries","isIntersecting","root","threshold","observe","onResize","addEventListener","onMove","clientX","clientY","dtms","onLeave","onKey","altKey","disconnect","removeEventListener","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/cvanbibber.github.io/src/components/CircuitField.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\r\nimport { useReducedMotion } from 'motion/react';\r\n\r\n/**\r\n * CircuitField: Electronics-themed interactive background (optimized)\r\n * - Static canvas: PCB-like grid and copper traces (wires)\r\n * - Dynamic canvas: electrons (carriers) flowing along traces + subtle node motion\r\n * - Cursor = charged probe (repel by default, hold Alt to attract)\r\n * - Pauses offscreen, respects Reduced Motion. Lower density and no heavy blur for perf.\r\n */\r\nconst CircuitField: React.FC = () => {\r\n  const staticRef = useRef<HTMLCanvasElement | null>(null);\r\n  const dynamicRef = useRef<HTMLCanvasElement | null>(null);\r\n  const runningRef = useRef(false);\r\n  const rafRef = useRef<number | null>(null);\r\n  const reduceMotion = useReducedMotion();\r\n\r\n  const mouse = useRef({ x: 0, y: 0, active: false, attract: false });\r\n  const mouseKinetics = useRef({ lastX: 0, lastY: 0, lastT: 0, speed: 0 }); // px/ms\r\n  const dprRef = useRef<number>(1);\r\n\r\n  // Internal simulation state\r\n  const stateRef = useRef<{\r\n    nodes: Array<{ x: number; y: number; x0: number; y0: number; vx: number; vy: number }>;\r\n    // only right and down connections for clearer circuit feel\r\n    edges: Array<{ a: number; b: number; carriers: Array<{ t: number; v: number }> }>;\r\n    w: number;\r\n    h: number;\r\n    pulses: Array<{ e: number; t: number; v: number; alpha: number }>; // transient energy pulses\r\n  rail: { y: number; carriers: Array<{ x: number; v: number }> };\r\n  components: Array<{ type: 'resistor' | 'capacitor' | 'ground'; e?: number; at: { x: number; y: number } }>;\r\n  } | null>(null);\r\n  const nextPulseAt = useRef<number>(performance.now() + 1500);\r\n  const timeRef = useRef<number>(0);\r\n\r\n  const rand = (min: number, max: number) => Math.random() * (max - min) + min;\r\n\r\n  const init = useCallback(() => {\r\n    const staticCanvas = staticRef.current;\r\n    const dynamicCanvas = dynamicRef.current;\r\n    if (!staticCanvas || !dynamicCanvas) return;\r\n\r\n    const rect = staticCanvas.getBoundingClientRect();\r\n    const dpr = Math.min(window.devicePixelRatio || 1, 1.5); // cap for perf\r\n    dprRef.current = dpr;\r\n\r\n    const width = Math.floor(rect.width * dpr);\r\n    const height = Math.floor(rect.height * dpr);\r\n    staticCanvas.width = width; staticCanvas.height = height;\r\n    dynamicCanvas.width = width; dynamicCanvas.height = height;\r\n\r\n    const w = width;\r\n    const h = height;\r\n\r\n    // Lower density for performance\r\n    const targetCols = Math.max(12, Math.min(18, Math.floor(rect.width / 70)));\r\n    const targetRows = Math.max(7, Math.min(12, Math.floor(rect.height / 70)));\r\n    const cols = targetCols;\r\n    const rows = targetRows;\r\n    const xStep = w / (cols + 1);\r\n    const yStep = h / (rows + 1);\r\n\r\n    const nodes: Array<{ x: number; y: number; x0: number; y0: number; vx: number; vy: number }> = [];\r\n\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        const x0 = (i + 1) * xStep + rand(-0.05, 0.05) * xStep;\r\n        const y0 = (j + 1) * yStep + rand(-0.05, 0.05) * yStep;\r\n        nodes.push({ x: x0, y: y0, x0, y0, vx: 0, vy: 0 });\r\n      }\r\n    }\r\n\r\n    const idx = (i: number, j: number) => j * cols + i;\r\n\r\n    // Only right and down connections; fewer carriers\r\n  const edges: Array<{ a: number; b: number; carriers: Array<{ t: number; v: number }> }> = [];\r\n    for (let j = 0; j < rows; j++) {\r\n      for (let i = 0; i < cols; i++) {\r\n        const a = idx(i, j);\r\n        const connect = (ii: number, jj: number) => {\r\n          if (ii >= 0 && ii < cols && jj >= 0 && jj < rows) {\r\n            const b = idx(ii, jj);\r\n            if (a < b) {\r\n              // Only put carriers on some edges for subtlety\r\n              const hasCarrier = Math.random() < 0.35;\r\n              const carriers = hasCarrier\r\n                ? [{ t: Math.random(), v: rand(0.00035, 0.001) }]\r\n                : [];\r\n              edges.push({ a, b, carriers });\r\n            }\r\n          }\r\n        };\r\n        connect(i + 1, j); // right\r\n        connect(i, j + 1); // down\r\n      }\r\n    }\r\n\r\n    // Define a power rail near the top\r\n    const railY = Math.round(h * 0.22);\r\n    const rail = {\r\n      y: railY,\r\n      carriers: new Array(12).fill(0).map(() => ({\r\n        x: Math.random() * w,\r\n        v: (0.08 + Math.random() * 0.06) * dpr // px/ms\r\n      }))\r\n    };\r\n\r\n    // Pick a couple of edges to mark with components (static aesthetics)\r\n    const componentEdges: number[] = [];\r\n    if (edges.length > 0) {\r\n      componentEdges.push(((Math.random() * edges.length) | 0));\r\n      componentEdges.push(((Math.random() * edges.length) | 0));\r\n    }\r\n    const components: Array<{ type: 'resistor' | 'capacitor' | 'ground'; e?: number; at: { x: number; y: number } }> = [];\r\n    if (componentEdges[0] != null) components.push({ type: 'resistor', e: componentEdges[0], at: { x: 0, y: 0 } });\r\n    if (componentEdges[1] != null) components.push({ type: 'capacitor', e: componentEdges[1], at: { x: 0, y: 0 } });\r\n    // Ground symbol near bottom left\r\n    components.push({ type: 'ground', at: { x: Math.round(w * 0.08), y: Math.round(h * 0.86) } });\r\n\r\n    stateRef.current = { nodes, edges, w, h, pulses: [], rail, components };\r\n\r\n    // Draw static once: background grid + traces\r\n    const sctx = staticCanvas.getContext('2d');\r\n    if (!sctx) return;\r\n    sctx.clearRect(0, 0, w, h);\r\n\r\n    // Subtle board grid\r\n    sctx.globalAlpha = 0.18;\r\n    sctx.strokeStyle = '#0891b2'; // cyan-700-ish\r\n    sctx.lineWidth = 1 * dpr;\r\n    const grid = 72 * dpr;\r\n    for (let x = 0; x < w; x += grid) { sctx.beginPath(); sctx.moveTo(x, 0); sctx.lineTo(x, h); sctx.stroke(); }\r\n    for (let y = 0; y < h; y += grid) { sctx.beginPath(); sctx.moveTo(0, y); sctx.lineTo(w, y); sctx.stroke(); }\r\n\r\n    // Copper traces (wires)\r\n    sctx.globalAlpha = 1;\r\n    sctx.strokeStyle = 'rgba(30, 64, 175, 0.25)'; // blue-800 low-alpha\r\n    sctx.lineWidth = 1 * dpr;\r\n    for (let e = 0; e < edges.length; e++) {\r\n      const edge = edges[e];\r\n      // only draw if near-horizontal/vertical lines (they are by construction)\r\n      const a = nodes[edge.a];\r\n      const b = nodes[edge.b];\r\n      sctx.beginPath(); sctx.moveTo(a.x, a.y); sctx.lineTo(b.x, b.y); sctx.stroke();\r\n    }\r\n\r\n    // Junction pads (very subtle)\r\n    sctx.fillStyle = 'rgba(59, 130, 246, 0.5)'; // blue-500\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const n = nodes[i];\r\n      sctx.beginPath(); sctx.arc(n.x, n.y, 1.2 * dpr, 0, Math.PI * 2); sctx.fill();\r\n    }\r\n\r\n    // Draw the power rail (static line + plus marks)\r\n    sctx.strokeStyle = 'rgba(220, 38, 38, 0.45)'; // red-600\r\n    sctx.lineWidth = 2 * dpr;\r\n    sctx.beginPath(); sctx.moveTo(0, rail.y); sctx.lineTo(w, rail.y); sctx.stroke();\r\n    sctx.fillStyle = 'rgba(220, 38, 38, 0.75)';\r\n    sctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n    sctx.textAlign = 'center'; sctx.textBaseline = 'middle';\r\n    for (let x = 30 * dpr; x < w; x += 110 * dpr) {\r\n      sctx.fillText('+', x, rail.y - 6 * dpr);\r\n    }\r\n\r\n    // Draw component symbols on chosen edges\r\n    sctx.strokeStyle = 'rgba(30, 64, 175, 0.6)';\r\n    sctx.fillStyle = 'rgba(30, 64, 175, 0.6)';\r\n    sctx.lineWidth = 1 * dpr;\r\n    for (const comp of components) {\r\n      if (comp.type === 'ground') {\r\n        const gx = comp.at.x, gy = comp.at.y;\r\n        // ground: three lines\r\n        sctx.beginPath(); sctx.moveTo(gx, gy - 10 * dpr); sctx.lineTo(gx, gy - 2 * dpr); sctx.stroke();\r\n        sctx.beginPath(); sctx.moveTo(gx - 6 * dpr, gy); sctx.lineTo(gx + 6 * dpr, gy); sctx.stroke();\r\n        sctx.beginPath(); sctx.moveTo(gx - 4 * dpr, gy + 3 * dpr); sctx.lineTo(gx + 4 * dpr, gy + 3 * dpr); sctx.stroke();\r\n        sctx.beginPath(); sctx.moveTo(gx - 2 * dpr, gy + 6 * dpr); sctx.lineTo(gx + 2 * dpr, gy + 6 * dpr); sctx.stroke();\r\n        continue;\r\n      }\r\n      const eidx = comp.e!;\r\n      const edge = edges[eidx];\r\n      if (!edge) continue;\r\n      const a = nodes[edge.a]; const b = nodes[edge.b];\r\n      const mx = (a.x + b.x) / 2; const my = (a.y + b.y) / 2;\r\n      const dx = b.x - a.x; const dy = b.y - a.y;\r\n      const len = Math.hypot(dx, dy);\r\n      const ux = dx / (len || 1); const uy = dy / (len || 1);\r\n      const px = -uy; const py = ux; // perpendicular\r\n      if (comp.type === 'resistor') {\r\n        // zigzag\r\n        const seg = Math.min(6 * dpr, len / 8);\r\n        sctx.beginPath();\r\n        sctx.moveTo(mx - ux * 16 * dpr, my - uy * 16 * dpr);\r\n        for (let i = -6; i <= 6; i++) {\r\n          const t = i * seg;\r\n          const off = (i % 2 === 0 ? 3 : -3) * dpr;\r\n          sctx.lineTo(mx + ux * t + px * off, my + uy * t + py * off);\r\n        }\r\n        sctx.stroke();\r\n      } else if (comp.type === 'capacitor') {\r\n        // two plates\r\n        const plate = 6 * dpr;\r\n        sctx.beginPath(); sctx.moveTo(mx - ux * 8 * dpr + px * plate, my - uy * 8 * dpr + py * plate);\r\n        sctx.lineTo(mx - ux * 8 * dpr - px * plate, my - uy * 8 * dpr - py * plate); sctx.stroke();\r\n        sctx.beginPath(); sctx.moveTo(mx + ux * 8 * dpr + px * plate, my + uy * 8 * dpr + py * plate);\r\n        sctx.lineTo(mx + ux * 8 * dpr - px * plate, my + uy * 8 * dpr - py * plate); sctx.stroke();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const step = (dt: number) => {\r\n    const st = stateRef.current;\r\n    const canvas = dynamicRef.current;\r\n    if (!st || !canvas) return;\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n  const { nodes, edges, w, h, pulses, rail } = st;\r\n    const dpr = dprRef.current;\r\n  timeRef.current += dt;\r\n  const nowT = performance.now();\r\n\r\n    // Physics parameters (subtle)\r\n  const spring = 0.0035;\r\n  const damping = 0.90;\r\n  const baseMouseForce = 5000;\r\n  const influenceR2 = (120 * dpr) * (120 * dpr);\r\n  // Cursor velocity attenuation: faster mouse => weaker influence\r\n  const speed = mouseKinetics.current.speed; // px/ms\r\n  const attenuation = 1 / (1 + 3.5 * speed); // tune factor 3.5\r\n  // Idle attenuation: if mouse hasn't moved recently, reduce influence further\r\n  const idleMs = mouseKinetics.current.lastT ? (nowT - mouseKinetics.current.lastT) : 0;\r\n  const idleFactor = idleMs > 3000 ? 0.0 : idleMs > 1500 ? 0.15 : idleMs > 600 ? 0.35 : 1;\r\n  const mouseForce = baseMouseForce * attenuation * idleFactor;\r\n  const maxVel = 0.06 * dpr; // clamp velocity for stability\r\n\r\n    // Update nodes (small drift, slight response to cursor)\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const n = nodes[i];\r\n      const ax = (n.x0 - n.x) * spring;\r\n      const ay = (n.y0 - n.y) * spring;\r\n      let fx = ax, fy = ay;\r\n      if (mouse.current.active) {\r\n        const dx = (mouse.current.x * dpr) - n.x;\r\n        const dy = (mouse.current.y * dpr) - n.y;\r\n        const r2 = dx * dx + dy * dy + 0.001;\r\n        if (r2 < influenceR2) {\r\n          const inv = 1 / Math.sqrt(r2);\r\n          const dirx = dx * inv;\r\n          const diry = dy * inv;\r\n          const sign = mouse.current.attract ? 1 : -1;\r\n          const mag = (mouseForce / r2) * sign;\r\n          fx += dirx * mag;\r\n          fy += diry * mag;\r\n        }\r\n      }\r\n      n.vx = (n.vx + fx) * damping;\r\n      n.vy = (n.vy + fy) * damping;\r\n  // clamp velocity\r\n  const vmag = Math.hypot(n.vx, n.vy);\r\n  if (vmag > maxVel) { const s = maxVel / vmag; n.vx *= s; n.vy *= s; }\r\n  n.x += n.vx * dt;\r\n  n.y += n.vy * dt;\r\n    }\r\n    // Power rail electrons: constant flow left->right\r\n    ctx.fillStyle = 'rgba(6,182,212,0.95)';\r\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n    ctx.textAlign = 'center'; ctx.textBaseline = 'middle';\r\n    for (let i = 0; i < rail.carriers.length; i++) {\r\n      const carr = rail.carriers[i];\r\n      carr.x += carr.v * dt;\r\n      if (carr.x > w + 8 * dpr) carr.x -= (w + 16 * dpr);\r\n      const x = carr.x; const y = rail.y;\r\n      ctx.beginPath(); ctx.arc(x, y, 1.6 * dpr, 0, Math.PI * 2); ctx.fill();\r\n      ctx.fillText('-', x, y - 0.4 * dpr);\r\n    }\r\n\r\n    // Clear dynamic layer\r\n    ctx.clearRect(0, 0, w, h);\r\n\r\n    // Draw carriers (electrons) with minus sign\r\n    ctx.fillStyle = 'rgba(6,182,212,0.9)'; // cyan-500\r\n    ctx.strokeStyle = 'rgba(6,182,212,0.25)';\r\n    ctx.lineWidth = 1 * dpr;\r\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    for (let e = 0; e < edges.length; e++) {\r\n      const edge = edges[e];\r\n      if (edge.carriers.length === 0) continue;\r\n      const a = nodes[edge.a];\r\n      const b = nodes[edge.b];\r\n      const ex = b.x - a.x;\r\n      const ey = b.y - a.y;\r\n      // Clock modulation: gentle global sweep by x-position and time\r\n      const phase = (a.x / w) * Math.PI * 2 + timeRef.current * 0.0015;\r\n      const clock = 1 + 0.15 * Math.sin(phase);\r\n      for (let c = 0; c < edge.carriers.length; c++) {\r\n        const carrier = edge.carriers[c];\r\n        carrier.t += carrier.v * dt * clock;\r\n        if (carrier.t > 1) carrier.t -= 1;\r\n        const x = a.x + ex * carrier.t;\r\n        const y = a.y + ey * carrier.t;\r\n        // main electron dot\r\n        ctx.beginPath(); ctx.arc(x, y, 1.3 * dpr, 0, Math.PI * 2); ctx.fill();\r\n        // minus sign overlay\r\n        ctx.fillStyle = 'rgba(6,182,212,0.95)';\r\n        ctx.fillText('-', x, y - 0.3 * dpr);\r\n        ctx.fillStyle = 'rgba(6,182,212,0.9)';\r\n        // faint forward line to indicate direction\r\n        ctx.beginPath(); ctx.moveTo(x - ex * 0.02, y - ey * 0.02); ctx.lineTo(x, y); ctx.stroke();\r\n      }\r\n    }\r\n\r\n    // Draw nodes minimal (small pads, no shadow)\r\n    ctx.fillStyle = 'rgba(59, 130, 246, 0.6)';\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const n = nodes[i];\r\n      ctx.beginPath(); ctx.arc(n.x, n.y, 1.1 * dpr, 0, Math.PI * 2); ctx.fill();\r\n    }\r\n\r\n    // Random pulses: bright transient dots traveling fast on random edges\r\n    // Schedule pulses at irregular intervals\r\n    if (performance.now() >= nextPulseAt.current && edges.length > 0) {\r\n      const count = Math.random() < 0.6 ? 1 : 2; // occasionally two\r\n      for (let k = 0; k < count; k++) {\r\n        const eidx = (Math.random() * edges.length) | 0;\r\n        pulses.push({ e: eidx, t: 0, v: 0.0025 + Math.random() * 0.0025, alpha: 1 });\r\n      }\r\n      nextPulseAt.current = performance.now() + 900 + Math.random() * 1800;\r\n    }\r\n\r\n    // Update/draw pulses\r\n    for (let i = pulses.length - 1; i >= 0; i--) {\r\n      const p = pulses[i];\r\n      const edge = edges[p.e];\r\n      const a = nodes[edge.a]; const b = nodes[edge.b];\r\n      p.t += p.v * dt;\r\n      p.alpha *= 0.996; // slow fade\r\n      if (p.t > 1 || p.alpha < 0.12) { pulses.splice(i, 1); continue; }\r\n      const x = a.x + (b.x - a.x) * p.t;\r\n      const y = a.y + (b.y - a.y) * p.t;\r\n      ctx.save();\r\n      ctx.globalAlpha = p.alpha;\r\n      ctx.fillStyle = 'rgba(248, 250, 252, 0.95)'; // near-white\r\n      ctx.beginPath(); ctx.arc(x, y, 1.6 * dpr, 0, Math.PI * 2); ctx.fill();\r\n      ctx.restore();\r\n    }\r\n\r\n    // Cursor ring (smaller and subtler)\r\n    if (mouse.current.active) {\r\n      ctx.globalAlpha = 0.5;\r\n      const attracting = mouse.current.attract;\r\n      ctx.strokeStyle = attracting ? 'rgba(34,197,94,0.7)' : 'rgba(239,68,68,0.7)';\r\n      ctx.lineWidth = 1.5 * dpr;\r\n      ctx.beginPath(); ctx.arc(mouse.current.x * dpr, mouse.current.y * dpr, 14 * dpr, 0, Math.PI * 2); ctx.stroke();\r\n      // Draw a plus sign at the cursor to indicate positive probe\r\n      ctx.globalAlpha = 0.8;\r\n      ctx.fillStyle = attracting ? 'rgba(34,197,94,0.9)' : 'rgba(239,68,68,0.9)';\r\n      ctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'middle';\r\n      ctx.fillText('+', mouse.current.x * dpr, mouse.current.y * dpr);\r\n      ctx.globalAlpha = 1;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sCanvas = staticRef.current;\r\n    const dCanvas = dynamicRef.current;\r\n    if (!sCanvas || !dCanvas) return;\r\n\r\n    if (reduceMotion) {\r\n      // Reduced motion: draw static only\r\n      init();\r\n      return;\r\n    }\r\n\r\n    init();\r\n\r\n    let last = performance.now();\r\n    let accum = 0;\r\n    const tick = (now: number) => {\r\n      if (!runningRef.current) return;\r\n      const frame = now - last;\r\n      last = now;\r\n      accum += frame;\r\n      // Update at ~30fps for perf, render when updated\r\n      if (accum >= 33) {\r\n        const dt = Math.min(33, accum);\r\n        accum = 0;\r\n        step(dt);\r\n      }\r\n      rafRef.current = requestAnimationFrame(tick);\r\n    };\r\n\r\n    const start = () => {\r\n      if (runningRef.current) return;\r\n      runningRef.current = true;\r\n      last = performance.now();\r\n      rafRef.current = requestAnimationFrame(tick);\r\n    };\r\n    const stop = () => {\r\n      runningRef.current = false;\r\n      if (rafRef.current) cancelAnimationFrame(rafRef.current);\r\n      rafRef.current = null;\r\n    };\r\n\r\n    // Intersection Observer to pause when offscreen\r\n  const io = new IntersectionObserver(\r\n      (entries) => {\r\n        for (const e of entries) {\r\n          if (e.isIntersecting) start();\r\n          else stop();\r\n        }\r\n      },\r\n      { root: null, threshold: 0.05 }\r\n    );\r\n  io.observe(dCanvas);\r\n\r\n    // Resize handler\r\n  const onResize = () => { init(); };\r\n    window.addEventListener('resize', onResize);\r\n\r\n    // Mouse and keyboard for interaction\r\n    const onMove = (e: MouseEvent) => {\r\n      const now = performance.now();\r\n      mouse.current.x = e.clientX;\r\n      mouse.current.y = e.clientY;\r\n      mouse.current.active = true;\r\n      // update velocity (px/ms)\r\n      const { lastX, lastY, lastT } = mouseKinetics.current;\r\n      if (lastT !== 0) {\r\n        const dx = e.clientX - lastX;\r\n        const dy = e.clientY - lastY;\r\n        const dtms = Math.max(1, now - lastT);\r\n        mouseKinetics.current.speed = Math.hypot(dx, dy) / dtms;\r\n      }\r\n      mouseKinetics.current.lastX = e.clientX;\r\n      mouseKinetics.current.lastY = e.clientY;\r\n      mouseKinetics.current.lastT = now;\r\n    };\r\n    const onLeave = () => { mouse.current.active = false; };\r\n    const onKey = (e: KeyboardEvent) => {\r\n      // Hold Alt to attract (green ring), release for repulsion (red)\r\n      mouse.current.attract = e.altKey;\r\n    };\r\n\r\n    window.addEventListener('mousemove', onMove);\r\n    window.addEventListener('mouseleave', onLeave);\r\n    window.addEventListener('keydown', onKey);\r\n    window.addEventListener('keyup', onKey);\r\n\r\n    return () => {\r\n      stop();\r\n      io.disconnect();\r\n      window.removeEventListener('resize', onResize);\r\n      window.removeEventListener('mousemove', onMove);\r\n      window.removeEventListener('mouseleave', onLeave);\r\n      window.removeEventListener('keydown', onKey);\r\n      window.removeEventListener('keyup', onKey);\r\n    };\r\n  }, [reduceMotion, init]);\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 w-full h-full pointer-events-none select-none\" aria-hidden>\r\n      <canvas ref={staticRef} className=\"absolute inset-0 w-full h-full\" />\r\n      <canvas ref={dynamicRef} className=\"absolute inset-0 w-full h-full\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}