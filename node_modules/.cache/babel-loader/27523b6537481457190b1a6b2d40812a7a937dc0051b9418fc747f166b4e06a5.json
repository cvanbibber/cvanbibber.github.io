{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\cvanbibber.github.io\\\\src\\\\components\\\\CircuitField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport { useReducedMotion } from 'motion/react';\n\n// Redesigned CircuitField: subtle but technical\n// - Thick power rail shows electron flow (âˆ’) and V/I indicators\n// - Several low-voltage signal lines with positive carriers (+) easily pushed by a positive cursor\n// - Tasteful random pulses and electronics symbols (resistor, capacitor, diode, op-amp, ground)\n// - Performance: dual-canvas, DPR-capped, offscreen pause, reduced-motion static fallback\n\n// Floating electron for ambient interactivity\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircuitField = () => {\n  _s();\n  const staticRef = useRef(null);\n  const dynamicRef = useRef(null);\n  const runningRef = useRef(false);\n  const rafRef = useRef(null);\n  const reduceMotion = useReducedMotion();\n  const dprRef = useRef(1);\n  const timeRef = useRef(0);\n  const mouse = useRef({\n    x: 0,\n    y: 0,\n    active: false,\n    charge: 1\n  }); // +1 positive probe, Alt toggles -1\n\n  const stateRef = useRef(null);\n  const rand = (a, b) => Math.random() * (b - a) + a;\n\n  // Build a left-to-right polyline with slight vertical variation\n  const makeSignal = (w, y, dpr, label, color, stiffness, tubeR) => {\n    const points = [];\n    const cols = 6;\n    for (let i = 0; i < cols; i++) {\n      const x = i / (cols - 1) * (w - 40 * dpr) + 20 * dpr; // 20px margin\n      const yj = y + rand(-8, 8) * dpr;\n      points.push({\n        x0: x,\n        y0: yj,\n        x,\n        y: yj\n      });\n    }\n    // Segments and total length\n    const segs = [];\n    let total = 0;\n    for (let i = 0; i < points.length - 1; i++) {\n      const ax = {\n        x: points[i].x,\n        y: points[i].y\n      };\n      const bx = {\n        x: points[i + 1].x,\n        y: points[i + 1].y\n      };\n      const len = Math.hypot(bx.x - ax.x, bx.y - ax.y);\n      segs.push({\n        ax,\n        bx,\n        len\n      });\n      total += len;\n    }\n    const carriers = new Array(9).fill(0).map((_, i) => ({\n      s: i / 9 * total,\n      v: rand(0.045, 0.08) * dpr,\n      charge: 1\n    }));\n    return {\n      points,\n      segs,\n      total,\n      carriers,\n      color,\n      tubeR,\n      label,\n      stiffness\n    };\n  };\n  const pointAt = (sig, s) => {\n    // wrap s into [0,total]\n    let d = s % sig.total;\n    if (d < 0) d += sig.total;\n    for (let i = 0; i < sig.segs.length; i++) {\n      const seg = sig.segs[i];\n      if (d <= seg.len) {\n        const t = seg.len ? d / seg.len : 0;\n        return {\n          x: seg.ax.x + (seg.bx.x - seg.ax.x) * t,\n          y: seg.ax.y + (seg.bx.y - seg.ax.y) * t\n        };\n      }\n      d -= seg.len;\n    }\n    // fallback end\n    const last = sig.segs[sig.segs.length - 1];\n    return {\n      x: last.bx.x,\n      y: last.bx.y\n    };\n  };\n\n  // Symbols removed per request (hidden)\n\n  const init = useCallback(() => {\n    const sCanvas = staticRef.current;\n    const dCanvas = dynamicRef.current;\n    if (!sCanvas || !dCanvas) return;\n    const rect = sCanvas.getBoundingClientRect();\n    const dpr = Math.min(window.devicePixelRatio || 1, 1.75); // cap for perf\n    dprRef.current = dpr;\n    const w = Math.max(1, Math.floor(rect.width * dpr));\n    const h = Math.max(1, Math.floor(rect.height * dpr));\n    sCanvas.width = w;\n    sCanvas.height = h;\n    dCanvas.width = w;\n    dCanvas.height = h;\n\n    // Multiple power rails (common voltages), thicker and more carriers\n    const railYs = [0.12, 0.18, 0.24, 0.30, 0.36].map(f => Math.round(h * f));\n    const railVs = [48.0, 24.0, 12.0, 5.0, 3.3];\n    const rails = railYs.map((y, i) => ({\n      y,\n      thickness: Math.max(6, 8 * dpr),\n      voltage: railVs[i],\n      carriers: new Array(28).fill(0).map(() => ({\n        x: Math.random() * w,\n        v: (0.075 + Math.random() * 0.06) * dpr\n      }))\n    }));\n\n    // Signals: lower voltage -> easier to deflect (lower stiffness)\n    // Logic-level signals (all under 3.3V): 0.6V, 0.85V, 1.05V, 1.2V, 1.8V, 2.5V\n    const railThickness = Math.max(6, 8 * dpr);\n    const tube = Math.max(railThickness * 1.4, 12 * dpr);\n    const s1 = makeSignal(w, Math.round(h * 0.50), dpr, '0.6V', 'rgba(56,189,248,0.7)', 0.04, tube);\n    const s2 = makeSignal(w, Math.round(h * 0.58), dpr, '0.85V', 'rgba(34,197,94,0.70)', 0.05, tube);\n    const s3 = makeSignal(w, Math.round(h * 0.66), dpr, '1.05V', 'rgba(168,85,247,0.65)', 0.06, tube);\n    const s4 = makeSignal(w, Math.round(h * 0.74), dpr, '1.2V', 'rgba(250,204,21,0.65)', 0.07, tube);\n    const s5 = makeSignal(w, Math.round(h * 0.82), dpr, '1.8V', 'rgba(59,130,246,0.65)', 0.09, tube);\n    const s6 = makeSignal(w, Math.round(h * 0.90), dpr, '2.5V', 'rgba(99,102,241,0.65)', 0.11, tube);\n    // Increase carriers per signal (more particles per wire)\n    for (const sig of [s1, s2, s3, s4, s5, s6]) {\n      const count = 30;\n      const total = sig.total;\n      sig.carriers = new Array(count).fill(0).map((_, i) => ({\n        s: i / count * total,\n        v: rand(0.06, 0.10) * dpr,\n        charge: 1\n      }));\n    }\n    const signals = [s1, s2, s3, s4, s5, s6];\n\n    // Floating electrons\n    const floaters = new Array(26).fill(0).map(() => ({\n      x: Math.random() * w,\n      y: Math.random() * h,\n      vx: rand(-0.02, 0.02) * dpr,\n      vy: rand(-0.02, 0.02) * dpr,\n      charge: -1\n    }));\n    stateRef.current = {\n      w,\n      h,\n      rails,\n      signals,\n      floaters\n    };\n\n    // Static background: grid, power rail base, symbols, labels\n    const sctx = sCanvas.getContext('2d');\n    if (!sctx) return;\n    sctx.clearRect(0, 0, w, h);\n\n    // PCB grid\n    sctx.save();\n    sctx.strokeStyle = 'rgba(8,145,178,0.18)';\n    sctx.lineWidth = 1 * dpr;\n    const step = 72 * dpr;\n    for (let x = 0; x < w; x += step) {\n      sctx.beginPath();\n      sctx.moveTo(x, 0);\n      sctx.lineTo(x, h);\n      sctx.stroke();\n    }\n    for (let y = 0; y < h; y += step) {\n      sctx.beginPath();\n      sctx.moveTo(0, y);\n      sctx.lineTo(w, y);\n      sctx.stroke();\n    }\n    sctx.restore();\n\n    // Power rails (multiple) with plus marks and voltage labels\n    sctx.fillStyle = 'rgba(239,68,68,0.85)';\n    sctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n    sctx.textAlign = 'left';\n    sctx.textBaseline = 'middle';\n    for (const rail of rails) {\n      const grad = sctx.createLinearGradient(0, rail.y, w, rail.y);\n      grad.addColorStop(0, 'rgba(239,68,68,0.35)');\n      grad.addColorStop(1, 'rgba(239,68,68,0.55)');\n      sctx.strokeStyle = grad;\n      sctx.lineWidth = rail.thickness;\n      sctx.beginPath();\n      sctx.moveTo(0, rail.y);\n      sctx.lineTo(w, rail.y);\n      sctx.stroke();\n      for (let x = 24 * dpr; x < w; x += 110 * dpr) sctx.fillText('+', x, rail.y - 7 * dpr);\n      sctx.fillText(`${rail.voltage.toFixed(1)}V`, 18 * dpr, rail.y - 18 * dpr);\n    }\n  }, []);\n  const step = dt => {\n    const st = stateRef.current;\n    const canvas = dynamicRef.current;\n    if (!st || !canvas) return;\n    const {\n      w,\n      h,\n      rails,\n      signals,\n      floaters\n    } = st;\n    const dpr = dprRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    timeRef.current += dt;\n\n    // Clear dynamic layer\n    ctx.clearRect(0, 0, w, h);\n\n    // Light wobble of signal control points (lower voltage -> looser)\n    for (const sig of signals) {\n      for (let i = 0; i < sig.points.length; i++) {\n        const p = sig.points[i];\n        // Keep x fixed; modulate y slightly\n        const a = (1 - sig.stiffness) * 5 * dpr; // amplitude\n        const wv = 0.001 + sig.stiffness * 0.003; // frequency\n        p.y = p.y0 + a * Math.sin((timeRef.current + i * 350) * wv);\n      }\n      // Recompute segments and total\n      sig.segs.length = 0;\n      sig.total = 0;\n      for (let i = 0; i < sig.points.length - 1; i++) {\n        const ax = {\n          x: sig.points[i].x,\n          y: sig.points[i].y\n        };\n        const bx = {\n          x: sig.points[i + 1].x,\n          y: sig.points[i + 1].y\n        };\n        const len = Math.hypot(bx.x - ax.x, bx.y - ax.y);\n        sig.segs.push({\n          ax,\n          bx,\n          len\n        });\n        sig.total += len;\n      }\n    }\n\n    // Draw signals (wire) and carriers (+); increase carrier count handled in init\n    ctx.lineWidth = 1 * dpr;\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    for (const sig of signals) {\n      // wire\n      ctx.strokeStyle = sig.color;\n      ctx.lineWidth = Math.max(6, 8 * dpr); // match rail thickness\n      ctx.beginPath();\n      for (let i = 0; i < sig.points.length; i++) {\n        const p = sig.points[i];\n        if (i === 0) ctx.moveTo(p.x, p.y);else ctx.lineTo(p.x, p.y);\n      }\n      ctx.stroke();\n      // label\n      const mid = pointAt(sig, sig.total * 0.08);\n      ctx.fillStyle = 'rgba(148,163,184,0.9)';\n      ctx.fillText(sig.label, mid.x + 8 * dpr, mid.y - Math.max(16, 18 * dpr));\n\n      // carriers\n      for (const c of sig.carriers) {\n        c.s += c.v * dt;\n        if (c.s > sig.total) c.s -= sig.total;\n        const base = pointAt(sig, c.s);\n\n        // Cursor interaction: cursor repels carriers (easier to push off trace)\n        let drawX = base.x,\n          drawY = base.y;\n        if (mouse.current.active) {\n          const mx = mouse.current.x * dpr,\n            my = mouse.current.y * dpr;\n          const dx = drawX - mx,\n            dy = drawY - my;\n          const r2 = dx * dx + dy * dy;\n          const R = (sig.tubeR * 5) ** 2; // influence area ~ 5x tube\n          if (r2 < R) {\n            const inv = 1 / Math.sqrt(r2 + 0.0001);\n            const dirx = dx * inv,\n              diry = dy * inv;\n            const strength = (1 - r2 / R) * (2.0 - sig.stiffness) * 34 * dpr; // easier displacement\n            drawX += dirx * strength; // always repulsive\n            drawY += diry * strength;\n          }\n        }\n\n        // tube halo when displaced\n        const displaced = Math.hypot(drawX - base.x, drawY - base.y) > sig.tubeR * 0.6;\n        if (displaced) {\n          ctx.save();\n          ctx.strokeStyle = sig.color.replace('0.7', '0.25').replace('0.65', '0.25').replace('0.6', '0.25');\n          ctx.lineWidth = 2 * dpr;\n          ctx.beginPath();\n          ctx.moveTo(base.x, base.y);\n          ctx.lineTo(drawX, drawY);\n          ctx.stroke();\n          ctx.restore();\n        }\n\n        // carrier dot (unified dark blue, larger)\n        ctx.fillStyle = 'rgba(30,58,138,0.95)'; // blue-900-ish\n        ctx.beginPath();\n        ctx.arc(drawX, drawY, Math.max(2.6 * dpr, 2.2), 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n\n    // Power rail electrons (âˆ’) repel from cursor for all rails\n    ctx.fillStyle = 'rgba(30,58,138,0.95)'; // same dark blue\n    for (const rail of rails) {\n      for (const e of rail.carriers) {\n        e.x += e.v * dt;\n        if (e.x > w + 10 * dpr) e.x -= w + 20 * dpr;\n        let ex = e.x,\n          ey = rail.y;\n        if (mouse.current.active) {\n          const mx = mouse.current.x * dpr,\n            my = mouse.current.y * dpr;\n          const dx = ex - mx,\n            dy = ey - my;\n          const r2 = dx * dx + dy * dy;\n          const R = (80 * dpr) ** 2;\n          if (r2 < R) {\n            const inv = 1 / Math.sqrt(r2 + 0.0001);\n            const dirx = dx * inv,\n              diry = dy * inv;\n            const strength = (1 - r2 / R) * 8 * dpr; // mild repulsion\n            ex += dirx * strength;\n            ey += diry * strength;\n          }\n        }\n        ctx.beginPath();\n        ctx.arc(ex, ey, Math.max(2.6 * dpr, 2.2), 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n\n    // Floating electrons (âˆ’) that are repelled by cursor\n    for (const f of floaters) {\n      // random gentle drift\n      f.vx += rand(-0.0008, 0.0008) * dpr * dt;\n      f.vy += rand(-0.0008, 0.0008) * dpr * dt;\n      // cursor influence (stronger, long-range)\n      if (mouse.current.active) {\n        const mx = mouse.current.x * dpr,\n          my = mouse.current.y * dpr;\n        const dx = f.x - mx,\n          dy = f.y - my;\n        const r2 = dx * dx + dy * dy + 0.001;\n        const R = (160 * dpr) ** 2;\n        if (r2 < R) {\n          const inv = 1 / Math.sqrt(r2);\n          const dirx = dx * inv,\n            diry = dy * inv;\n          const accel = (1 - r2 / R) * 0.08 * dpr; // repulsive\n          f.vx += dirx * accel;\n          f.vy += diry * accel;\n        }\n      }\n      // damping\n      f.vx *= 0.985;\n      f.vy *= 0.985;\n      // move and wrap\n      f.x += f.vx * dt;\n      f.y += f.vy * dt;\n      if (f.x < -10 * dpr) f.x = w + 10 * dpr;else if (f.x > w + 10 * dpr) f.x = -10 * dpr;\n      if (f.y < -10 * dpr) f.y = h + 10 * dpr;else if (f.y > h + 10 * dpr) f.y = -10 * dpr;\n      // draw\n      ctx.fillStyle = 'rgba(30,58,138,0.95)';\n      ctx.beginPath();\n      ctx.arc(f.x, f.y, Math.max(2.6 * dpr, 2.2), 0, Math.PI * 2);\n      ctx.fill();\n    }\n\n    // Cursor glyph (probe)\n    if (mouse.current.active) {\n      ctx.save();\n      const mx = mouse.current.x * dpr,\n        my = mouse.current.y * dpr;\n      const col = mouse.current.charge > 0 ? 'rgba(239,68,68,0.75)' : 'rgba(59,130,246,0.75)';\n      ctx.strokeStyle = col;\n      ctx.lineWidth = 1.5 * dpr;\n      ctx.beginPath();\n      ctx.arc(mx, my, 14 * dpr, 0, Math.PI * 2);\n      ctx.stroke();\n      ctx.fillStyle = col;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\n      ctx.fillText(mouse.current.charge > 0 ? '+' : '-', mx, my);\n      ctx.restore();\n    }\n  };\n  useEffect(() => {\n    const sCanvas = staticRef.current;\n    const dCanvas = dynamicRef.current;\n    if (!sCanvas || !dCanvas) return;\n    if (reduceMotion) {\n      init();\n      return;\n    }\n    init();\n    let last = performance.now(),\n      accum = 0;\n    const tick = now => {\n      if (!runningRef.current) return;\n      const frame = now - last;\n      last = now;\n      accum += frame;\n      if (accum >= 33) {\n        const dt = Math.min(33, accum);\n        accum = 0;\n        step(dt);\n      }\n      rafRef.current = requestAnimationFrame(tick);\n    };\n    const start = () => {\n      if (runningRef.current) return;\n      runningRef.current = true;\n      last = performance.now();\n      rafRef.current = requestAnimationFrame(tick);\n    };\n    const stop = () => {\n      runningRef.current = false;\n      if (rafRef.current) cancelAnimationFrame(rafRef.current);\n      rafRef.current = null;\n    };\n\n    // Pause when offscreen\n    const io = new IntersectionObserver(entries => {\n      for (const e of entries) {\n        if (e.isIntersecting) start();else stop();\n      }\n    }, {\n      root: null,\n      threshold: 0.05\n    });\n    io.observe(dCanvas);\n\n    // Resize\n    const onResize = () => init();\n    window.addEventListener('resize', onResize);\n\n    // Mouse: positive by default, hold Alt to flip to negative\n    const onMove = e => {\n      mouse.current.x = e.clientX;\n      mouse.current.y = e.clientY;\n      mouse.current.active = true;\n    };\n    const onLeave = () => {\n      mouse.current.active = false;\n    };\n    const onKey = e => {\n      mouse.current.charge = e.altKey ? -1 : 1;\n    };\n    window.addEventListener('mousemove', onMove);\n    window.addEventListener('mouseleave', onLeave);\n    window.addEventListener('keydown', onKey);\n    window.addEventListener('keyup', onKey);\n    return () => {\n      stop();\n      io.disconnect();\n      window.removeEventListener('resize', onResize);\n      window.removeEventListener('mousemove', onMove);\n      window.removeEventListener('mouseleave', onLeave);\n      window.removeEventListener('keydown', onKey);\n      window.removeEventListener('keyup', onKey);\n    };\n  }, [reduceMotion, init]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute inset-0 w-full h-full pointer-events-none select-none\",\n    \"aria-hidden\": true,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: staticRef,\n      className: \"absolute inset-0 w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: dynamicRef,\n      className: \"absolute inset-0 w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(CircuitField, \"0YA0SGJXhvRRwXVm0luLyjCsqy0=\", false, function () {\n  return [useReducedMotion];\n});\n_c = CircuitField;\nexport default CircuitField;\nvar _c;\n$RefreshReg$(_c, \"CircuitField\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","useReducedMotion","jsxDEV","_jsxDEV","CircuitField","_s","staticRef","dynamicRef","runningRef","rafRef","reduceMotion","dprRef","timeRef","mouse","x","y","active","charge","stateRef","rand","a","b","Math","random","makeSignal","w","dpr","label","color","stiffness","tubeR","points","cols","i","yj","push","x0","y0","segs","total","length","ax","bx","len","hypot","carriers","Array","fill","map","_","s","v","pointAt","sig","d","seg","t","last","init","sCanvas","current","dCanvas","rect","getBoundingClientRect","min","window","devicePixelRatio","max","floor","width","h","height","railYs","f","round","railVs","rails","thickness","voltage","railThickness","tube","s1","s2","s3","s4","s5","s6","count","signals","floaters","vx","vy","sctx","getContext","clearRect","save","strokeStyle","lineWidth","step","beginPath","moveTo","lineTo","stroke","restore","fillStyle","font","textAlign","textBaseline","rail","grad","createLinearGradient","addColorStop","fillText","toFixed","dt","st","canvas","ctx","p","wv","sin","mid","c","base","drawX","drawY","mx","my","dx","dy","r2","R","inv","sqrt","dirx","diry","strength","displaced","replace","arc","PI","e","ex","ey","accel","col","performance","now","accum","tick","frame","requestAnimationFrame","start","stop","cancelAnimationFrame","io","IntersectionObserver","entries","isIntersecting","root","threshold","observe","onResize","addEventListener","onMove","clientX","clientY","onLeave","onKey","altKey","disconnect","removeEventListener","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/cvanbibber.github.io/src/components/CircuitField.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\r\nimport { useReducedMotion } from 'motion/react';\r\n\r\n// Redesigned CircuitField: subtle but technical\r\n// - Thick power rail shows electron flow (âˆ’) and V/I indicators\r\n// - Several low-voltage signal lines with positive carriers (+) easily pushed by a positive cursor\r\n// - Tasteful random pulses and electronics symbols (resistor, capacitor, diode, op-amp, ground)\r\n// - Performance: dual-canvas, DPR-capped, offscreen pause, reduced-motion static fallback\r\n\r\ntype Vec2 = { x: number; y: number };\r\n\r\ntype Signal = {\r\n  points: Array<{ x0: number; y0: number; x: number; y: number }>; // control points\r\n  segs: Array<{ ax: Vec2; bx: Vec2; len: number }>;\r\n  total: number;\r\n  carriers: Array<{ s: number; v: number; charge: 1 | -1 }>; // s in [0,total]\r\n  color: string;\r\n  tubeR: number; // visual comfort radius\r\n  label: string; // e.g. 1.2V, 3.3V\r\n  stiffness: number; // curve wobble stiffness (higher -> stiffer)\r\n};\r\n\r\n// Floating electron for ambient interactivity\r\ntype Floater = { x: number; y: number; vx: number; vy: number; charge: -1 };\r\n\r\nconst CircuitField: React.FC = () => {\r\n  const staticRef = useRef<HTMLCanvasElement | null>(null);\r\n  const dynamicRef = useRef<HTMLCanvasElement | null>(null);\r\n  const runningRef = useRef(false);\r\n  const rafRef = useRef<number | null>(null);\r\n  const reduceMotion = useReducedMotion();\r\n\r\n  const dprRef = useRef(1);\r\n  const timeRef = useRef(0);\r\n  const mouse = useRef({ x: 0, y: 0, active: false, charge: 1 as 1 | -1 }); // +1 positive probe, Alt toggles -1\r\n\r\n  const stateRef = useRef<\r\n    | {\r\n        w: number;\r\n        h: number;\r\n        rails: Array<{\r\n          y: number;\r\n          thickness: number;\r\n          voltage: number; // volts\r\n          carriers: Array<{ x: number; v: number }>;\r\n        }>;\r\n        signals: Signal[];\r\n        floaters: Floater[];\r\n      }\r\n    | null\r\n  >(null);\r\n\r\n  const rand = (a: number, b: number) => Math.random() * (b - a) + a;\r\n\r\n  // Build a left-to-right polyline with slight vertical variation\r\n  const makeSignal = (w: number, y: number, dpr: number, label: string, color: string, stiffness: number, tubeR: number): Signal => {\r\n    const points: Array<{ x0: number; y0: number; x: number; y: number }> = [];\r\n    const cols = 6;\r\n    for (let i = 0; i < cols; i++) {\r\n      const x = (i / (cols - 1)) * (w - 40 * dpr) + 20 * dpr; // 20px margin\r\n      const yj = y + rand(-8, 8) * dpr;\r\n      points.push({ x0: x, y0: yj, x, y: yj });\r\n    }\r\n    // Segments and total length\r\n    const segs: Array<{ ax: Vec2; bx: Vec2; len: number }> = [];\r\n    let total = 0;\r\n    for (let i = 0; i < points.length - 1; i++) {\r\n      const ax = { x: points[i].x, y: points[i].y };\r\n      const bx = { x: points[i + 1].x, y: points[i + 1].y };\r\n      const len = Math.hypot(bx.x - ax.x, bx.y - ax.y);\r\n      segs.push({ ax, bx, len });\r\n      total += len;\r\n    }\r\n    const carriers = new Array(9).fill(0).map((_, i) => ({ s: (i / 9) * total, v: rand(0.045, 0.08) * dpr, charge: 1 as 1 }));\r\n    return { points, segs, total, carriers, color, tubeR, label, stiffness };\r\n  };\r\n\r\n  const pointAt = (sig: Signal, s: number): Vec2 => {\r\n    // wrap s into [0,total]\r\n    let d = s % sig.total; if (d < 0) d += sig.total;\r\n    for (let i = 0; i < sig.segs.length; i++) {\r\n      const seg = sig.segs[i];\r\n      if (d <= seg.len) {\r\n        const t = seg.len ? d / seg.len : 0;\r\n        return { x: seg.ax.x + (seg.bx.x - seg.ax.x) * t, y: seg.ax.y + (seg.bx.y - seg.ax.y) * t };\r\n      }\r\n      d -= seg.len;\r\n    }\r\n    // fallback end\r\n    const last = sig.segs[sig.segs.length - 1];\r\n    return { x: last.bx.x, y: last.bx.y };\r\n  };\r\n\r\n  // Symbols removed per request (hidden)\r\n\r\n  const init = useCallback(() => {\r\n    const sCanvas = staticRef.current;\r\n    const dCanvas = dynamicRef.current;\r\n    if (!sCanvas || !dCanvas) return;\r\n\r\n    const rect = sCanvas.getBoundingClientRect();\r\n    const dpr = Math.min(window.devicePixelRatio || 1, 1.75); // cap for perf\r\n    dprRef.current = dpr;\r\n    const w = Math.max(1, Math.floor(rect.width * dpr));\r\n    const h = Math.max(1, Math.floor(rect.height * dpr));\r\n    sCanvas.width = w; sCanvas.height = h;\r\n    dCanvas.width = w; dCanvas.height = h;\r\n\r\n    // Multiple power rails (common voltages), thicker and more carriers\r\n    const railYs = [0.12, 0.18, 0.24, 0.30, 0.36].map((f) => Math.round(h * f));\r\n    const railVs = [48.0, 24.0, 12.0, 5.0, 3.3];\r\n    const rails = railYs.map((y, i) => ({\r\n      y,\r\n      thickness: Math.max(6, 8 * dpr),\r\n      voltage: railVs[i],\r\n      carriers: new Array(28).fill(0).map(() => ({ x: Math.random() * w, v: (0.075 + Math.random() * 0.06) * dpr }))\r\n    }));\r\n\r\n    // Signals: lower voltage -> easier to deflect (lower stiffness)\r\n    // Logic-level signals (all under 3.3V): 0.6V, 0.85V, 1.05V, 1.2V, 1.8V, 2.5V\r\n    const railThickness = Math.max(6, 8 * dpr);\r\n    const tube = Math.max(railThickness * 1.4, 12 * dpr);\r\n    const s1 = makeSignal(w, Math.round(h * 0.50), dpr, '0.6V', 'rgba(56,189,248,0.7)', 0.04, tube);\r\n    const s2 = makeSignal(w, Math.round(h * 0.58), dpr, '0.85V', 'rgba(34,197,94,0.70)', 0.05, tube);\r\n    const s3 = makeSignal(w, Math.round(h * 0.66), dpr, '1.05V', 'rgba(168,85,247,0.65)', 0.06, tube);\r\n    const s4 = makeSignal(w, Math.round(h * 0.74), dpr, '1.2V', 'rgba(250,204,21,0.65)', 0.07, tube);\r\n    const s5 = makeSignal(w, Math.round(h * 0.82), dpr, '1.8V', 'rgba(59,130,246,0.65)', 0.09, tube);\r\n    const s6 = makeSignal(w, Math.round(h * 0.90), dpr, '2.5V', 'rgba(99,102,241,0.65)', 0.11, tube);\r\n    // Increase carriers per signal (more particles per wire)\r\n    for (const sig of [s1, s2, s3, s4, s5, s6]) {\r\n      const count = 30; const total = sig.total;\r\n      sig.carriers = new Array(count).fill(0).map((_, i) => ({ s: (i / count) * total, v: rand(0.06, 0.10) * dpr, charge: 1 as 1 }));\r\n    }\r\n    const signals = [s1, s2, s3, s4, s5, s6];\r\n\r\n    // Floating electrons\r\n    const floaters: Floater[] = new Array(26).fill(0).map(() => ({\r\n      x: Math.random() * w,\r\n      y: Math.random() * h,\r\n      vx: rand(-0.02, 0.02) * dpr,\r\n      vy: rand(-0.02, 0.02) * dpr,\r\n      charge: -1 as -1\r\n    }));\r\n\r\n    stateRef.current = { w, h, rails, signals, floaters };\r\n\r\n    // Static background: grid, power rail base, symbols, labels\r\n    const sctx = sCanvas.getContext('2d');\r\n    if (!sctx) return;\r\n    sctx.clearRect(0, 0, w, h);\r\n\r\n    // PCB grid\r\n    sctx.save();\r\n    sctx.strokeStyle = 'rgba(8,145,178,0.18)';\r\n    sctx.lineWidth = 1 * dpr;\r\n    const step = 72 * dpr;\r\n    for (let x = 0; x < w; x += step) { sctx.beginPath(); sctx.moveTo(x, 0); sctx.lineTo(x, h); sctx.stroke(); }\r\n    for (let y = 0; y < h; y += step) { sctx.beginPath(); sctx.moveTo(0, y); sctx.lineTo(w, y); sctx.stroke(); }\r\n    sctx.restore();\r\n\r\n    // Power rails (multiple) with plus marks and voltage labels\r\n    sctx.fillStyle = 'rgba(239,68,68,0.85)';\r\n    sctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n    sctx.textAlign = 'left'; sctx.textBaseline = 'middle';\r\n    for (const rail of rails) {\r\n      const grad = sctx.createLinearGradient(0, rail.y, w, rail.y);\r\n      grad.addColorStop(0, 'rgba(239,68,68,0.35)');\r\n      grad.addColorStop(1, 'rgba(239,68,68,0.55)');\r\n      sctx.strokeStyle = grad;\r\n      sctx.lineWidth = rail.thickness;\r\n      sctx.beginPath(); sctx.moveTo(0, rail.y); sctx.lineTo(w, rail.y); sctx.stroke();\r\n      for (let x = 24 * dpr; x < w; x += 110 * dpr) sctx.fillText('+', x, rail.y - 7 * dpr);\r\n      sctx.fillText(`${rail.voltage.toFixed(1)}V`, 18 * dpr, rail.y - 18 * dpr);\r\n    }\r\n  }, []);\r\n\r\n  const step = (dt: number) => {\r\n    const st = stateRef.current; const canvas = dynamicRef.current;\r\n    if (!st || !canvas) return;\r\n  const { w, h, rails, signals, floaters } = st; const dpr = dprRef.current;\r\n    const ctx = canvas.getContext('2d'); if (!ctx) return;\r\n    timeRef.current += dt;\r\n\r\n    // Clear dynamic layer\r\n    ctx.clearRect(0, 0, w, h);\r\n\r\n    // Light wobble of signal control points (lower voltage -> looser)\r\n    for (const sig of signals) {\r\n      for (let i = 0; i < sig.points.length; i++) {\r\n        const p = sig.points[i];\r\n        // Keep x fixed; modulate y slightly\r\n        const a = (1 - sig.stiffness) * 5 * dpr; // amplitude\r\n        const wv = 0.001 + sig.stiffness * 0.003; // frequency\r\n        p.y = p.y0 + a * Math.sin((timeRef.current + i * 350) * wv);\r\n      }\r\n      // Recompute segments and total\r\n      sig.segs.length = 0; sig.total = 0;\r\n      for (let i = 0; i < sig.points.length - 1; i++) {\r\n        const ax = { x: sig.points[i].x, y: sig.points[i].y };\r\n        const bx = { x: sig.points[i + 1].x, y: sig.points[i + 1].y };\r\n        const len = Math.hypot(bx.x - ax.x, bx.y - ax.y);\r\n        sig.segs.push({ ax, bx, len }); sig.total += len;\r\n      }\r\n    }\r\n\r\n  // Draw signals (wire) and carriers (+); increase carrier count handled in init\r\n    ctx.lineWidth = 1 * dpr;\r\n    ctx.font = `${Math.max(8, 9 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n    ctx.textAlign = 'center'; ctx.textBaseline = 'middle';\r\n    for (const sig of signals) {\r\n      // wire\r\n  ctx.strokeStyle = sig.color;\r\n  ctx.lineWidth = Math.max(6, 8 * dpr); // match rail thickness\r\n  ctx.beginPath();\r\n      for (let i = 0; i < sig.points.length; i++) {\r\n        const p = sig.points[i]; if (i === 0) ctx.moveTo(p.x, p.y); else ctx.lineTo(p.x, p.y);\r\n      }\r\n      ctx.stroke();\r\n  // label\r\n  const mid = pointAt(sig, sig.total * 0.08);\r\n  ctx.fillStyle = 'rgba(148,163,184,0.9)';\r\n  ctx.fillText(sig.label, mid.x + 8 * dpr, mid.y - Math.max(16, 18 * dpr));\r\n\r\n      // carriers\r\n      for (const c of sig.carriers) {\r\n        c.s += c.v * dt; if (c.s > sig.total) c.s -= sig.total;\r\n        const base = pointAt(sig, c.s);\r\n\r\n    // Cursor interaction: cursor repels carriers (easier to push off trace)\r\n        let drawX = base.x, drawY = base.y;\r\n        if (mouse.current.active) {\r\n          const mx = mouse.current.x * dpr, my = mouse.current.y * dpr;\r\n          const dx = drawX - mx, dy = drawY - my; const r2 = dx * dx + dy * dy;\r\n          const R = (sig.tubeR * 5) ** 2; // influence area ~ 5x tube\r\n          if (r2 < R) {\r\n            const inv = 1 / Math.sqrt(r2 + 0.0001);\r\n            const dirx = dx * inv, diry = dy * inv;\r\n      const strength = (1 - r2 / R) * (2.0 - sig.stiffness) * 34 * dpr; // easier displacement\r\n      drawX += dirx * strength; // always repulsive\r\n      drawY += diry * strength;\r\n          }\r\n        }\r\n\r\n        // tube halo when displaced\r\n        const displaced = Math.hypot(drawX - base.x, drawY - base.y) > sig.tubeR * 0.6;\r\n        if (displaced) {\r\n          ctx.save();\r\n          ctx.strokeStyle = sig.color.replace('0.7', '0.25').replace('0.65', '0.25').replace('0.6', '0.25');\r\n          ctx.lineWidth = 2 * dpr;\r\n          ctx.beginPath(); ctx.moveTo(base.x, base.y); ctx.lineTo(drawX, drawY); ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n\r\n        // carrier dot (unified dark blue, larger)\r\n        ctx.fillStyle = 'rgba(30,58,138,0.95)'; // blue-900-ish\r\n        ctx.beginPath(); ctx.arc(drawX, drawY, Math.max(2.6 * dpr, 2.2), 0, Math.PI * 2); ctx.fill();\r\n      }\r\n    }\r\n\r\n  // Power rail electrons (âˆ’) repel from cursor for all rails\r\n  ctx.fillStyle = 'rgba(30,58,138,0.95)'; // same dark blue\r\n    for (const rail of rails) {\r\n      for (const e of rail.carriers) {\r\n        e.x += e.v * dt; if (e.x > w + 10 * dpr) e.x -= (w + 20 * dpr);\r\n        let ex = e.x, ey = rail.y;\r\n        if (mouse.current.active) {\r\n          const mx = mouse.current.x * dpr, my = mouse.current.y * dpr;\r\n          const dx = ex - mx, dy = ey - my; const r2 = dx * dx + dy * dy;\r\n          const R = (80 * dpr) ** 2;\r\n          if (r2 < R) {\r\n            const inv = 1 / Math.sqrt(r2 + 0.0001);\r\n            const dirx = dx * inv, diry = dy * inv;\r\n      const strength = (1 - r2 / R) * 8 * dpr; // mild repulsion\r\n      ex += dirx * strength;\r\n      ey += diry * strength;\r\n          }\r\n        }\r\n  ctx.beginPath(); ctx.arc(ex, ey, Math.max(2.6 * dpr, 2.2), 0, Math.PI * 2); ctx.fill();\r\n      }\r\n    }\r\n\r\n  // Floating electrons (âˆ’) that are repelled by cursor\r\n    for (const f of floaters) {\r\n      // random gentle drift\r\n      f.vx += rand(-0.0008, 0.0008) * dpr * dt;\r\n      f.vy += rand(-0.0008, 0.0008) * dpr * dt;\r\n      // cursor influence (stronger, long-range)\r\n      if (mouse.current.active) {\r\n        const mx = mouse.current.x * dpr, my = mouse.current.y * dpr;\r\n        const dx = f.x - mx, dy = f.y - my; const r2 = dx * dx + dy * dy + 0.001;\r\n        const R = (160 * dpr) ** 2;\r\n        if (r2 < R) {\r\n          const inv = 1 / Math.sqrt(r2);\r\n          const dirx = dx * inv, diry = dy * inv;\r\n      const accel = (1 - r2 / R) * 0.08 * dpr; // repulsive\r\n      f.vx += dirx * accel;\r\n      f.vy += diry * accel;\r\n        }\r\n      }\r\n      // damping\r\n      f.vx *= 0.985; f.vy *= 0.985;\r\n      // move and wrap\r\n      f.x += f.vx * dt; f.y += f.vy * dt;\r\n      if (f.x < -10 * dpr) f.x = w + 10 * dpr; else if (f.x > w + 10 * dpr) f.x = -10 * dpr;\r\n      if (f.y < -10 * dpr) f.y = h + 10 * dpr; else if (f.y > h + 10 * dpr) f.y = -10 * dpr;\r\n      // draw\r\n  ctx.fillStyle = 'rgba(30,58,138,0.95)';\r\n  ctx.beginPath(); ctx.arc(f.x, f.y, Math.max(2.6 * dpr, 2.2), 0, Math.PI * 2); ctx.fill();\r\n    }\r\n\r\n    // Cursor glyph (probe)\r\n    if (mouse.current.active) {\r\n      ctx.save();\r\n      const mx = mouse.current.x * dpr, my = mouse.current.y * dpr;\r\n      const col = mouse.current.charge > 0 ? 'rgba(239,68,68,0.75)' : 'rgba(59,130,246,0.75)';\r\n      ctx.strokeStyle = col; ctx.lineWidth = 1.5 * dpr;\r\n      ctx.beginPath(); ctx.arc(mx, my, 14 * dpr, 0, Math.PI * 2); ctx.stroke();\r\n      ctx.fillStyle = col; ctx.textAlign = 'center'; ctx.textBaseline = 'middle';\r\n      ctx.font = `${Math.max(10, 11 * dpr)}px system-ui, -apple-system, Segoe UI, Roboto, sans-serif`;\r\n      ctx.fillText(mouse.current.charge > 0 ? '+' : '-', mx, my);\r\n      ctx.restore();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sCanvas = staticRef.current; const dCanvas = dynamicRef.current;\r\n    if (!sCanvas || !dCanvas) return;\r\n\r\n    if (reduceMotion) { init(); return; }\r\n    init();\r\n\r\n    let last = performance.now(), accum = 0;\r\n    const tick = (now: number) => {\r\n      if (!runningRef.current) return;\r\n      const frame = now - last; last = now; accum += frame;\r\n      if (accum >= 33) { const dt = Math.min(33, accum); accum = 0; step(dt); }\r\n      rafRef.current = requestAnimationFrame(tick);\r\n    };\r\n    const start = () => { if (runningRef.current) return; runningRef.current = true; last = performance.now(); rafRef.current = requestAnimationFrame(tick); };\r\n    const stop = () => { runningRef.current = false; if (rafRef.current) cancelAnimationFrame(rafRef.current); rafRef.current = null; };\r\n\r\n    // Pause when offscreen\r\n    const io = new IntersectionObserver((entries) => { for (const e of entries) { if (e.isIntersecting) start(); else stop(); } }, { root: null, threshold: 0.05 });\r\n    io.observe(dCanvas);\r\n\r\n    // Resize\r\n    const onResize = () => init();\r\n    window.addEventListener('resize', onResize);\r\n\r\n    // Mouse: positive by default, hold Alt to flip to negative\r\n    const onMove = (e: MouseEvent) => { mouse.current.x = e.clientX; mouse.current.y = e.clientY; mouse.current.active = true; };\r\n    const onLeave = () => { mouse.current.active = false; };\r\n    const onKey = (e: KeyboardEvent) => { mouse.current.charge = e.altKey ? -1 : 1; };\r\n    window.addEventListener('mousemove', onMove);\r\n    window.addEventListener('mouseleave', onLeave);\r\n    window.addEventListener('keydown', onKey);\r\n    window.addEventListener('keyup', onKey);\r\n\r\n    return () => {\r\n      stop(); io.disconnect();\r\n      window.removeEventListener('resize', onResize);\r\n      window.removeEventListener('mousemove', onMove);\r\n      window.removeEventListener('mouseleave', onLeave);\r\n      window.removeEventListener('keydown', onKey);\r\n      window.removeEventListener('keyup', onKey);\r\n    };\r\n  }, [reduceMotion, init]);\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 w-full h-full pointer-events-none select-none\" aria-hidden>\r\n      <canvas ref={staticRef} className=\"absolute inset-0 w-full h-full\" />\r\n      <canvas ref={dynamicRef} className=\"absolute inset-0 w-full h-full\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircuitField;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}